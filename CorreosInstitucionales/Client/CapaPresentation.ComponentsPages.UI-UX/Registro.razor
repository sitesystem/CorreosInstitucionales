@page "/Registro"

@using CorreosInstitucionales.Shared.CapaEntities.ViewModels.Request;
@using CorreosInstitucionales.Shared.CapaEntities.ViewModels.Response;
@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.captchaService;
@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.catCarrerasService;
@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.tbUsuariosService;
@using System;
@using System.Globalization;
@using System.Threading;

@inject ICarrera servicioCarrera
@inject IUsuario servicioUsuario

<style>
    <!-- estilos de insert -->
    .content-wrapper {
        width: 90%;
        margin: 0 auto;
        min-width: 85px;
    }

    b.example-label {
        font-size: 14px;
    }

    .content-wrapper div.row {
        padding: 15px 0px;
    }

    .small-textbox {
        padding-top: 5px;
    }

    .tailwind .small-textbox,
    .tailwind-dark .small-textbox {
        padding-top: 3px;
    }

    .e-bigger .small-textbox {
        padding-top: 10px;
    }

    .tailwind .e-bigger .small-textbox,
    .tailwind-dark .e-bigger .small-textbox {
        padding-top: 1px;
    }

    @@media only screen and (max-width: 480px) {
        .content-wrapper {
            width: 92%;
        }

        .col-xs-6,
        .col-xs-4,
        .col-xs-12 {
            padding: 10px 5px;
            width: 100%;
        }

        .content-wrapper div.row {
            padding: 0px;
        }
    }

    .fabric .row.material,
    .bootstrap .row.material,
    .bootstrap4 .row.material,
    .bootstrap5 .row.material,
    .highcontrast .row.material,
    .tailwind .row.material,
    .fluent .row.material,
    .fabric-dark .row.material,
    .bootstrap-dark .row.material,
    .bootstrap5-dark .row.material,
    .tailwind-dark .row.material,
    .fluent-dark .row.material {
        display: none;
    }
    <!-- * rojo 
    .is-required:after {
        content: '*';
        margin-left: 3px;
        color: red;
        font-weight: bold;
        font-size: 20px;
    }-->
    <!-- dropdownlist filtering    -->
    .control-wrapper {
        width: 250px;
        margin: auto;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
    <!-- estilo bonton-->
    #button-control {
        width: 100%;
        margin: 8% 0;
        text-align: center;
    }

    #button-control .e-btn {
        float: left;
    }

    @@media only screen and (max-width: 500px) {
        #button-control {
            margin-left: -3%;
        }
    }

    .button-section {
        width: 80%;
        margin: auto;
    }

    #button-control .col-xs-12 {
        margin: 15px 0;
    }
    <!-- estilo file upload-- >
    .control-section {
        min-height: 370px;
    }

    .control-wrapper-upload {
        max-width: 350px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }
    <!-- toggle button -->
    .e-switch-wrapper
    {
        font-size: 20px;
        width: 80px;
        height: 30px;
    }
    <!-- estilo de mensaje -->
    .msg-content {
        font-size: 80px;
    }

    .msg-custom-section .content-section {
        margin: 0 auto;
        max-width: 400px;
        padding-top: 10px;
    }

    .msg-custom-section .e-message {
        margin: 10px 0;
    }

    .msg-custom-section .e-message.rounded {
        border-radius: 5px;
    }

    .msg-custom-section .e-message.square {
        border-radius: 1px;
    }

    SfMessage {
        margin-top: 100px;
        margin-right: 25px;
        margin-bottom: 100px;
        margin-left: 25px;
    }

    
</style>


<h3>Registro alumno</h3>
<!-- Etiqueta de datos personales -->

<EditForm Model="@oUsuario" OnValidSubmit="@Registrar">
    
    <DataAnnotationsValidator />

    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
            <b class="example-label" size="20px">Datos personales</b>
        </div>
    </div>
    <!-- Etiqueta flotante -->
    <div class="row">
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Nombre(s)"
                       Type="Syncfusion.Blazor.Inputs.InputType.Text"
                       FloatLabelType="@FloatLabelType.Auto"
                       style="text-transform:uppercase"
                       @bind-Value="@oUsuario.UsuNombre"
                       OnInput="@((e) => oUsuario.UsuNombre = e.Value.ToString().ToUpper())"
                       onkeypress="return /^[A-Za-z. ]+$/.test(String.fromCharCode(event.keyCode || event.which));">
            </SfTextBox>
            <ValidationMessage For="@(() => oUsuario.UsuNombre)" />
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Primer Apellido" FloatLabelType="@FloatLabelType.Auto" style="text-transform:uppercase" @bind-Value="@oUsuario.UsuPrimerApellido"></SfTextBox>
            <ValidationMessage For="@(() => oUsuario.UsuPrimerApellido)" />
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Segundo Apellido" FloatLabelType="@FloatLabelType.Auto" style="text-transform:uppercase" @bind-Value="@oUsuario.UsuSegundoApellido"></SfTextBox>
        </div>
   
    </div>
    <div class="row">
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Boleta" 
                       FloatLabelType="@FloatLabelType.Auto" 
                        @bind-Value="@oUsuario.UsuBoleta">
            </SfTextBox>
            <ValidationMessage For="@(() => oUsuario.UsuBoleta)" />
        </div> 
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfDropDownList ID="Data___UsuIdCarrera"
                            TValue="int?"
                            TItem="CarreraViewModel"
                            Placeholder="Carrera"
                            FloatLabelType="FloatLabelType.Auto"
                            ShowClearButton="true"
                            EnableVirtualization="false"
                            IgnoreCase="true"
                            DataSource="@oCarrera.Data"
                            @bind-Value="@oUsuario.UsuIdCarrera" 
                            Enabled="true"
                            Readonly="false"
                            CssClass=""
                            AllowFiltering="true"
                            FilterBarPlaceholder="Selecciona una opción"
                            IgnoreAccent="true"
                            FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains"
                            SortOrder="Syncfusion.Blazor.DropDowns.SortOrder.None">
                            <DropDownListFieldSettings Value="IdCarrera" Text="CarrNombre" />
            </SfDropDownList>        
           <ValidationMessage For="@(() => oUsuario.UsuIdCarrera)" />
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
               <SfDropDownList ID="Data___UsuSemestre"
                            TValue="string"
                            TItem="Semestres"
                            Placeholder="Semestre"
                            FloatLabelType="FloatLabelType.Auto"
                            AllowFiltering="true"
                            DataSource="@Semestre"
                            @bind-Value="@oUsuario.UsuSemestre">
                            <DropDownListFieldSettings Value="Key" Text="Value" />
               </SfDropDownList> 
            
            <ValidationMessage For="@(() => oUsuario.UsuSemestre)" /> 
        </div>
    </div>

    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
            <SfTextBox Placeholder="CURP" FloatLabelType="@FloatLabelType.Auto" style="text-transform:uppercase" @bind-Value="@oUsuario.UsuCurp"></SfTextBox>
            <ValidationMessage For="@(() => oUsuario.UsuCurp)" />
        </div>
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
            <SfTextBox Placeholder="No. Celular" FloatLabelType="@FloatLabelType.Auto" style="text-transform:uppercase" @bind-Value="@oUsuario.UsuNoCelularNuevo"></SfTextBox>
            <ValidationMessage For="@(() => oUsuario.UsuNoCelularNuevo)" />
        </div>        
    </div>
    <div class="row">              
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
            <p>



            </p>
            <label style="padding: 10px 70px 10px 0">Egresado</label>
            <SfSwitch @bind-Checked="@egresado" OnLabel="SÍ" OffLabel="NO"></SfSwitch>            
        </div>
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                    @if (egresado == true)
                    {
                        <SfNumericTextBox TValue="int?" Min=1936 Max="@year" Step=1 Placeholder="Año de egreso" FloatLabelType="@FloatLabelType.Auto" Format="####" @bind-Value="@oUsuario.UsuAñoEgreso"></SfNumericTextBox>
                    }
        </div>
    </div>
    <div class="row">        
             <div class="control-wrapper-upload">
                <p>Adjunte el CURP en formato PDF</p>
                <SfUploader @ref="UploadObj" AllowedExtensions=".pdf" MinFileSize=1 MaxFileSize=2000000>
                    <UploaderEvents OnRemove="OnFileRemove"></UploaderEvents>
                    <UploaderAsyncSettings SaveUrl="https://blazor.syncfusion.com/services/production/api/FileUploader/Save" RemoveUrl="https://blazor.syncfusion.com/services/production/api/FileUploader/Remove"></UploaderAsyncSettings>
                </SfUploader>
            </div>
            <div class="control-wrapper-upload">
                <p>Adjunte el comprobante de inscripción en PDF</p>
            <SfUploader @ref="UploadObj" AllowedExtensions=".pdf" MinFileSize=1 MaxFileSize=2000000>
                    <UploaderEvents OnRemove="OnFileRemove"></UploaderEvents>
                    <UploaderAsyncSettings SaveUrl="https://blazor.syncfusion.com/services/production/api/FileUploader/Save" RemoveUrl="https://blazor.syncfusion.com/services/production/api/FileUploader/Remove"></UploaderAsyncSettings>
                </SfUploader>
             </div>
            <div class="control-wrapper-upload">
                <p>Adjunte credencial institucional en formato PDF</p>
            <SfUploader @ref="UploadObj" AllowedExtensions=".pdf" MinFileSize=1 MaxFileSize=2000000>
                    <UploaderEvents OnRemove="OnFileRemove"></UploaderEvents>
                    <UploaderAsyncSettings SaveUrl="https://blazor.syncfusion.com/services/production/api/FileUploader/Save" RemoveUrl="https://blazor.syncfusion.com/services/production/api/FileUploader/Remove"></UploaderAsyncSettings>
                </SfUploader>
            </div>        
    </div> 
    <p>


    </p>
    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
            <b class="example-label">Datos de la cuenta</b>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Correo Personal" Type="Syncfusion.Blazor.Inputs.InputType.Email" FloatLabelType="@FloatLabelType.Auto" @bind-Value="@oUsuario.UsuCorreoPersonal"></SfTextBox>
            <ValidationMessage For="@(() => oUsuario.UsuCorreoPersonal)" />
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Contraseña" Type="Syncfusion.Blazor.Inputs.InputType.Password" FloatLabelType="@FloatLabelType.Auto" @bind-Value="@oUsuario.UsuContraseña"></SfTextBox>
            <ValidationMessage For="@(() => oUsuario.UsuContraseña)" />
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Confirmar contraseña" Type="Syncfusion.Blazor.Inputs.InputType.Password" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
            <SfTextBox Placeholder="Correo institucional (en caso de tenerlo)" FloatLabelType="@FloatLabelType.Auto" @bind-Value="@oUsuario.UsuCorreroInstitucional"></SfTextBox>
        </div>
    </div>
    @* <div class="row">
        <ReCaptcha SiteKey="@_siteKey" OnSuccess="OnSuccess" OnExpired="OnExpired"/>
        <span>@_ReCaptchaMsg</span>
    </div> *@
    <!-- Captcha -->
    @* 
    <BlazorAppReCaptcha.Components.Recaptcha>

    </BlazorAppReCaptcha.Components.Recaptcha> *@
    <!-- bton -->
    
    @if(egresado==true){
        <div class="control-section">
            <div class="button-section">
                <div id="button-control">
                    <div class="row">
                        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                            <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                                <button type="submit" class="btn btn-outline-primary">Enviar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
           <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                <SfMessage Severity="MessageSeverity.Error" Variant="MessageVariant.Filled">Llene el captcha.</SfMessage>
           </div>
        </div>
    }
</EditForm>



@code
{
    // varibles de toggle
    private bool egresado = false;

    //varible fecha
    int year = DateTime.Parse(DateTime.Now.ToString()).Year;   

    //metodos de API

    private UsuarioViewModel? oUsuario = new();
    //Lista de carreras
    public Response<List<CarreraViewModel>>? oCarrera = new();

    protected override async Task OnInitializedAsync()
    {
        oCarrera = await servicioCarrera.GetAllDataAsync(false);
    }

    public async Task Registrar()
    {
        await servicioUsuario.AddDataAsync(oUsuario);

    }

    // Lista de semestres
    public class Semestres
    {
        public string Value { get; set; }
        public string Key { get; set; }
    }

    private List<Semestres> Semestre = new List<Semestres>
    {
        new Semestres() { Value = "1ro semestre", Key = "1" },
        new Semestres() { Value = "2do semestre", Key = "2" },
        new Semestres() { Value = "3ro semestre", Key = "3" },
        new Semestres() { Value = "4to semestre", Key = "4" },
        new Semestres() { Value = "5to semestre", Key = "5" },
        new Semestres() { Value = "6to semestre", Key = "6" },
        new Semestres() { Value = "7mo semestre", Key = "7" },
        new Semestres() { Value = "8vo semestre", Key = "8" },
        new Semestres() { Value = "9no semestre", Key = "9" },
        new Semestres() { Value = "10mo semestre", Key = "10" },
    };
    //File upload
    SfUploader UploadObj;
    public void OnFileRemove(RemovingEventArgs args)
    {
        args.PostRawFile = false;
    }

    // Captcha

    // [Inject]
    // IReCaptcha? _RCaptcha {get; set;}

    // [Inject]
    // protected IConfiguration? _configuration {get; set;}

    // private string _ReCaptchaMsg="";
    // private string _siteKey="";
    // private string _secretKey="";

    // protected override void OnInitialized()
    // {
    //     _siteKey = _configuration!.GetSection("ReCaptcha:SiteKey").Value ?? "";
    //     _secretKey = _configuration!.GetSection("ReCaptcha:SecretKey").Value ?? "";
    // }

    // private async void OnSuccess(string reCaptchaResponse)
    // {
    //     var isValid = await _RCaptcha.ValidateResponse(reCaptchaResponse,_siteKey);
    //     _ReCaptchaMsg = isValid ? "ReCaptcha OK" : "ReCaptcha Failed";
    //     StateHasChanged();
    // }
    // private void OnExpired()
    // {
    //     _ReCaptchaMsg = "ReCaptcha Expired";
    //     StateHasChanged();
    // }
}

         