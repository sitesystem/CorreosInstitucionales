@page "/Registros"

@using CorreosInstitucionales.Shared.CapaEntities.ViewModels.Request;
@using CorreosInstitucionales.Shared.CapaEntities.ViewModels.Response;
@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.catCarrerasService;

@inject ICarrera servicioCarrera
@* @inject IUsuarios servicioUsuario *@

<style>
    <!-- estilos de insert -->
    .content-wrapper {
        width: 90%;
        margin: 0 auto;
        min-width: 85px;
    }

    b.example-label {
        font-size: 14px;
    }

    .content-wrapper div.row {
        padding: 15px 0px;
    }

    .small-textbox {
        padding-top: 5px;
    }

    .tailwind .small-textbox,
    .tailwind-dark .small-textbox {
        padding-top: 3px;
    }

    .e-bigger .small-textbox {
        padding-top: 10px;
    }

    .tailwind .e-bigger .small-textbox,
    .tailwind-dark .e-bigger .small-textbox {
        padding-top: 1px;
    }

    @@media only screen and (max-width: 480px) {
        .content-wrapper {
            width: 92%;
        }

        .col-xs-6,
        .col-xs-4,
        .col-xs-12 {
            padding: 10px 5px;
            width: 100%;
        }

        .content-wrapper div.row {
            padding: 0px;
        }
    }

    .fabric .row.material,
    .bootstrap .row.material,
    .bootstrap4 .row.material,
    .bootstrap5 .row.material,
    .highcontrast .row.material,
    .tailwind .row.material,
    .fluent .row.material,
    .fabric-dark .row.material,
    .bootstrap-dark .row.material,
    .bootstrap5-dark .row.material,
    .tailwind-dark .row.material,
    .fluent-dark .row.material {
        display: none;
    }
    <!-- * rojo 
    .is-required:after {
        content: '*';
        margin-left: 3px;
        color: red;
        font-weight: bold;
        font-size: 20px;
    }-->
    <!-- dropdownlist filtering    -->
    .control-wrapper {
        width: 250px;
        margin: auto;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
    <!-- estilo bonton-->
    #button-control {
        width: 100%;
        margin: 8% 0;
        text-align: center;
    }

    #button-control .e-btn {
        float: left;
    }

    @@media only screen and (max-width: 500px) {
        #button-control {
            margin-left: -3%;
        }
    }

    .button-section {
        width: 80%;
        margin: auto;
    }

    #button-control .col-xs-12 {
        margin: 15px 0;
    }
</style>


<h3>Registro</h3>
@*
<div class="row">
    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
        <SfTextBox Placeholder="Primer Apellido" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
    </div>
    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
        <SfTextBox Placeholder="Segundo Apellido" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
    </div>
</div>
<div class="row">
    <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
        <SfTextBox Placeholder="Nombre(s)" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
    </div>
</div> *@
<!-- Etiqueta de datos personales -->

<EditForm Model="@oUsuario" OnSubmit="@Registrar">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
            <b class="example-label" size="20px">Datos personales</b>
        </div>
    </div>
    <!-- Etiqueta flotante -->
    <div class="row">
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Nombre(s)" FloatLabelType="@FloatLabelType.Auto" @bind-Value="@oUsuario.UsuNombre"></SfTextBox>
            <ValidationMessage For="@(() => oUsuario.UsuNombre)"></ValidationMessage>
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Primer Apellido" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Segundo Apellido" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
   
    </div>
    <div class="row">
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Boleta"  FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <label class="example-label">               </label>
                <SfDropDownList TValue="string" TItem="CarreraViewModel" Placeholder="e.g. Lic. o Ing. " AllowFiltering="true" DataSource="@oCarrera.Data">
                    <DropDownListFieldSettings Value="IdCarrera" Text="CarrNombre" />
                </SfDropDownList>        
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <label class="example-label">               </label>
            <SfDropDownList TValue="string" TItem="Semestres" Placeholder="e.g. semestre " AllowFiltering="true" DataSource="@Semestre">
                <DropDownListFieldSettings Value="Key" Text="Value" />
            </SfDropDownList>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="CURP" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="No. Celular" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">   
            <p>

            </p>
            <label style="padding: 10px 70px 10px 0">Egresado</label>
            <SfSwitch @bind-Checked="@egresado"></SfSwitch>            
        </div>
    </div>
    <p>


    </p>
    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
            <b class="example-label">Datos de la cuenta</b>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Correo Personal" Type="Syncfusion.Blazor.Inputs.InputType.Email" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Contraseña" Type="Syncfusion.Blazor.Inputs.InputType.Password" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
        <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
            <SfTextBox Placeholder="Confirmar contraseña" Type="Syncfusion.Blazor.Inputs.InputType.Password" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
            <SfTextBox Placeholder="Correo institucional en caso de tenerlo" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
        </div>
    </div>

    <!-- bton-->
    <div class="control-section">
        <div class="button-section">
            <div id="button-control">
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                        <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                            <SfButton IsPrimary="true" CssClass="e-outline">Enviar</SfButton>
                        </div>
                    </div>                                             
                 </div>
            </div>
        </div>
    </div>
</EditForm>


@* <form method="get">
    <p>Descripci&#243n Piso  <input type="text" name="descripcion" size="200px"></p>
    <p>
        Status:
        <input type="radio" name="st" value="A"> Activo
        <input type="radio" name="st" value="I"> Inactivo
    </p>
</form>*@

@code {
    //varibles de toggle
    private bool egresado = false;
    //Lista de carreras
    public Response<List<CarreraViewModel>>? oCarrera = new();
    public UsuarioViewModel? oUsuario = new();

    protected override async Task OnInitializedAsync()
    {
        oCarrera = await servicioCarrera.GetAllDataAsync(false);
    }

    public void Registrar()
    {
        // servicioUsuario.Add();
    }

    // Lista de semestres
    public class Semestres
    {
        public string Value { get; set; }
        public string Key { get; set; }
    }
    private List<Semestres> Semestre = new List<Semestres>
    {
        new Semestres() { Value = "Primer semestre", Key = "1" },
        new Semestres() { Value = "Segundo semestre", Key = "2" },
        new Semestres() { Value = "Tercero semestre", Key = "3" },
        new Semestres() { Value = "Cuarto semestre", Key = "4" },
        new Semestres() { Value = "Quinto semestre", Key = "5" },
        new Semestres() { Value = "Sexto semestre", Key = "6" },
        new Semestres() { Value = "Septimo semestre", Key = "7" },
        new Semestres() { Value = "Octavo semestre", Key = "8" },
        new Semestres() { Value = "Noveno semestre", Key = "9" },
        new Semestres() { Value = "Decimo semestre", Key = "10" },
       
    };
}
