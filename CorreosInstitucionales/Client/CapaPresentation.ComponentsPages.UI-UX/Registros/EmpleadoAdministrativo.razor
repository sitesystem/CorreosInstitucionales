@page "/RegistroEmpleadoAdministrativo"

@attribute [AllowAnonymous]

@using CorreosInstitucionales.Shared.CapaEntities.Request
@using CorreosInstitucionales.Shared.CapaEntities.Response

@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.catLinks
@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.tbUsuarios
@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.toolSendEmail

@inject ILinkService servicioLink
@inject ISendEmailService servicioSendEmail
@inject IUsuarioService servicioUsuario

@* @inject IJSRuntime JSRuntime *@

<style>
    .mi-sf-textbox {
        position: relative;
        flex-basis: 100px;
        flex-grow: 1;
    }

    RadzenTextBox::after {
        content: ' ';
        position: absolute;
        left: 0;
        bottom: -3px;
        width: 100%;
        height: 2px;
        background-color: red;
    }
</style>

@if(oUsuario != null)
{
    <EditForm Model="@oUsuario" OnValidSubmit="@Registrar" OnInvalidSubmit="@ScrollToTop">

        <DataAnnotationsValidator/>

        <div class="card border-dark mb-3" style="margin-top:20px">
            <b class="card-header" size="20px">Datos Personales</b>
            <div class="card-body">
                <div class="row">
                    <div class="col-xs-4 col-lg-4 col-md-4">
                        @* <RadzenCard>
                            <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Nombre</RadzenText>
                            <RadzenTextBox @bind-Value="@oUsuario.UsuNombre" class="w-100" aria-label="Default TextBox" />
                        </RadzenCard> *@
                        <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Nombre</RadzenText>
                        <RadzenTextBox @bind-Value="@oUsuario.UsuNombre" class="w-100" aria-label="Default TextBox" style="border-bottom: 3px solid red;" />
                    </div>
                    <div class="col-xs-4 col-lg-4 col-md-4">
                        @* <RadzenCard>
                            <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Primer Apellido</RadzenText>
                            <RadzenTextBox @bind-Value="@oUsuario.UsuPrimerApellido" class="w-100" aria-label="Default TextBox" />
                        </RadzenCard> *@
                        <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Primer Apellido</RadzenText>
                        <RadzenTextBox @bind-Value="@oUsuario.UsuPrimerApellido" class="w-100" aria-label="Default TextBox" style="border-bottom: 3px solid red;" />
                    </div>
                    <div class="col-xs-4 col-lg-4 col-md-4">
                        @* <RadzenCard>
                            <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Segundo Apellido</RadzenText>
                            <RadzenTextBox @bind-Value="@oUsuario.UsuSegundoApellido" class="w-100" aria-label="Default TextBox" />
                        </RadzenCard> *@
                        <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Segundo Apellido</RadzenText>
                        <RadzenTextBox @bind-Value="@oUsuario.UsuSegundoApellido" class="w-100" aria-label="Default TextBox" style="border-bottom: 3px solid red;" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4" style="margin-top:20px">
                        @* <RadzenCard>
                            <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Numero de Celular</RadzenText>
                            <RadzenTextBox @bind-Value="@oUsuario.UsuNoCelularAnterior" class="w-100" aria-label="Default TextBox" />
                        </RadzenCard> *@
                        <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Numero de Celular</RadzenText>
                        <RadzenTextBox @bind-Value="@oUsuario.UsuNoCelularAnterior" class="w-100" aria-label="Default TextBox" style="border-bottom: 3px solid red;" />
                    </div>
                    <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4" style="margin-top:20px">
                        @* <RadzenCard>
                            <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">CURP</RadzenText>
                            <RadzenTextBox @bind-Value="@oUsuario.UsuCurp" class="w-100" aria-label="Default TextBox" />
                            <a href="@linkCURP.LinkNombre" target="_blank">
                                ¿Olvidaste tu Curp?
                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-box-arrow-up-right" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z" />
                                    <path fill-rule="evenodd" d="M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z" />
                                </svg>
                            </a>
                            <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2" TagName="TagName.H3">Archivo CURP</RadzenText>
                            <RadzenUpload Url="upload/single" class="w-100" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})">
                            </RadzenUpload>
                        </RadzenCard> *@
                        <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">CURP</RadzenText>
                        <RadzenTextBox @bind-Value="@oUsuario.UsuCurp" MaxLength="18" class="w-100" aria-label="Default TextBox" style="border-bottom: 3px solid red;" />

                        <a href="@linkCURP.LinkEnlace" target="_blank">
                            ¿Olvidaste tu Curp?
                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-box-arrow-up-right" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z" />
                                <path fill-rule="evenodd" d="M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z" />
                            </svg>
                        </a>
                    </div>
                    <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4" style="margin-top:50px">
                        <RadzenCard>
                        <RadzenUpload Url="upload/single" Icon="upload" ChooseText="" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})">
                        </RadzenUpload>
                        </RadzenCard>
                    </div>
                </div>
                <div class="row gy-3">
                    <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                    </div>
                </div>
            </div>
        </div>

        <!-- ******************************************************************* CARD DATOS LABORALES ******************************************************************* -->
            <div class="card border-dark mb-3" style="margin-top:20px">
            <b class="card-header" size="20px">Datos laborales</b>
            <div class="card-body">
                <div class="row gy-3">
                    <div class="col-xs-4 col-lg-4 col-md-4">
                        <RadzenCard>
                            @* <RadzenNumeric 
                                            TValue="int?"
                                            Min="1936"
                                            Max="@year"
                                            Step="1"
                                            Placeholder="Año de egreso"
                                            Format="####" @bind-Value="@oUsuario.UsuAñoEgreso"
                                            onkeypress="return /^[0-9]+$/.test(String.fromCharCode(event.keyCode || event.which));"
                                            ShowUpDown="false"/>
                            <ValidationMessage For="@(() => oUsuario.UsuAñoEgreso)" /> *@
                                <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Número de empleado</RadzenText>
                            <RadzenTextBox @bind-Value="@oUsuario.UsuNumeroEmpleado" onkeypress="return /^[0-9]+$/.test(String.fromCharCode(event.keyCode || event.which));" 
                                           class="w-100" 
                                           aria-label="Default TextBox"
                                           style="border-bottom: 3px solid red;" />
                          
                        </RadzenCard>
                    </div>
                    <div class="col-xs-4 col-lg-4 col-md-4">
                        <RadzenCard>
                            <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Número de la extensión del departamento</RadzenText>
                            <RadzenTextBox @bind-Value="@oUsuario.UsuNoExtension" onkeypress="return /^[0-9]+$/.test(String.fromCharCode(event.keyCode || event.which));"
                            class="w-100" 
                            aria-label="Default TextBox"
                                           style="border-bottom: 3px solid red;" />
                        </RadzenCard>
                    </div>                    
                    <div class="col-xs-4 col-lg-4 col-md-4">
                        <RadzenCard>
                            <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Número de área de departamento</RadzenText>
                            <RadzenNumeric 
                                        TValue="int?"                                    
                                        Placeholder="Número de área"                                    
                                        ShowUpDown="false"
                                        class="w-100"
                                        style="border-bottom: 3px solid red;"
                                        />                        
                        </RadzenCard>
                    </div>               
                </div>
            </div>
        </div>

        <!-- ******************************************************************* CARD DATOS DE LA CUENTA ******************************************************************* -->

        <div class="card border-dark mb-3" style="margin-top:20px">
            <b class="card-header" size="20px">Datos de la cuenta</b>
            <div class="card-body">
                <div class="row">
                    <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                        <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Correo</RadzenText>
                        <RadzenTextBox @bind-Value="@oUsuario.UsuCorreoPersonalCuentaNueva" class="w-100" aria-label="Default TextBox" style="border-bottom: 3px solid red;" />
                    </div>
                    <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                        <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2">Contraseña</RadzenText>
                        <RadzenPassword @bind-Value=@oUsuario.UsuContraseña class="w-100" aria-label="enter password" style="border-bottom: 3px solid red;" />
                    </div>
                    <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                        <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2"> Confirmar Contraseña</RadzenText>
                        <RadzenPassword @bind-Value=@contra2 class="w-100" aria-label="enter password" style="border-bottom: 3px solid red;" />
                        <br/>
                    
                    </div>
                </div>
            </div>
        </div>
        <!-- ******************************************************************* CARD DATOS CORREO INSTITUCIONAL ******************************************************************* -->
        <div class="card border-dark mb-3" style="margin-top:20px">
            <b class="card-header" size="20px">Correo Institucional</b>
            <div class="card-body">
                <div class="row">
                    <center>
                        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6">
                            <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2" class="text-start">Ingresa tu Correo Institucional</RadzenText>
                            <RadzenTextBox @bind-Value="@oUsuario.UsuCorreoPersonalCuentaNueva" class="w-100" aria-label="Default TextBox" />
                        </div>
                    </center>
                </div>
            </div>
            <div class="card-footer">
                <small class="text-body-secondary">En caso de contar con uno.</small>
            </div>
        </div>
        <!-- ******************************************************************* CARD RECAPTCHA ******************************************************************* -->
        <div class="card">
            <div class="card-body">
                <div class="row justify-content-center gy-3">
                    <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6 captcha">    
                        <RadzenCard style="background-color: transparent;">
                            <center>
                                <ReCAPTCHA @ref="reCAPTCHAComponent" SiteKey="6LeMdxkpAAAAABQkCp77LSx1K8tDRlmSAYXIU6AL" OnSuccess="OnSuccess" OnExpired="OnExpired" />
                                <br />
                                <RadzenButton ButtonType="Radzen.ButtonType.Submit" style="width: 160px" IsBusy=@busy Click=@OnBusyClick  Text="Save" />
                                <!--<RadzenStack Gap="3rem" Wrap="FlexWrap.Wrap" class="rz-p-12"></RadzenStack>-->
                            </center>
                        </RadzenCard>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}
else
{
    <RadzenStack Orientation="Radzen.Orientation.Vertical" AlignItems="Radzen.AlignItems.Center" JustifyContent="Radzen.JustifyContent.Center" Wrap="FlexWrap.Wrap" Class="rz-m-12" Gap="2rem">
        <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Primary" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
        <RadzenText TextStyle="Radzen.Blazor.TextStyle.Subtitle2" TagName="TagName.H3">Cargando <strong>...</strong></RadzenText>
    </RadzenStack>
}

@code
{
    bool busy;

    async Task OnBusyClick()
    {
        busy = true;
        await Task.Delay(2000);
        busy = false;
    }

    public int year = DateTime.Parse(DateTime.Now.ToString()).Year;
    public Response<object>? oRespuesta = new();
    public RequestDTO_Usuario? oUsuario = new()
    {
        // DATOS ID DEL USUARIO
        IdUsuario = 0,
        UsuIdRol = 2,                           // FK ID del Rol (1 - Administrador, 2 - Usuario Solicitante)
        UsuIdTipoPersonal = 4,                  // FK ID del Tipo de Personal ([1 - Alumno Inscrito], [2 - Alumno Egresado], [3 - Maestria], [4 - Administrativo], [5 - Docente])
        // DATOS PERSONALES
        UsuNombre = "",                         // Nombre del Usuario Solicitante o Administrador
        UsuPrimerApellido = "",                 // Primer Apellido del Usuario Solicitante o Administrador
        UsuSegundoApellido = "",                // Segundo Apellido del Usuario Solicitante o Administrador
        UsuCurp = "",                           // CURP con 18 caracteres como mínimo
        UsuFileNameCurp = "",                   // Nombre del Archivo y extensión .pdf del CURP
        //UsuNoCelularAnterior = "0000000000",    // Número de Celular Anterior si llega a cambiar por uno nuevo
        // UsuNoCelularNuevo = "0000000000",       // Número de Celular Nuevo que sería el número de celular actual
        // DATOS ACADÉMICOS
        UsuBoletaAlumno = "0000600000",         // Número de Boleta del Usuario (Alumno Inscrito o Egresado)
        UsuBoletaMaestria = "B000000",          // Número de Boleta del Usuario (Alumno de Maestria)
        UsuIdCarrera = 1,                       // FK ID de la Carrera del Alumno
        UsuSemestre = "1",                      // Semestre que cursa el Alumno Inscrito o de Maestria
        UsuAñoEgreso = 0,                       // Año de Egreso en dado caso
        UsuFileNameComprobanteInscripcion = "", // Nombre del Archivo en .pdf del Comprobante de Inscripcion (Tira de Materias)
        // DATOS LABORALES
        //UsuNumeroEmpleado = "0",                // Número del Empleado del Usuario (Administrador o Docente)
        // UsuIdAreaDepto = 1,                     // FK ID del Área/Departamento del Usuario Empleado
        //UsuNoExtension = "0",                   // Número de Extensión del Empleado
        // DATOS DE LAS CREDENCIALES DE LA CUENTA EN LA APP
        UsuCorreoPersonalCuentaAnterior = "",   // Correo Personal de la Cuenta Anterior
        UsuCorreoPersonalCuentaNueva = "",      // Correo Personal de la Cuenta Nueva o Actual
        UsuContraseña = "",                     // Contraseña en la PLataforma del Usuario Solicitante o Administrador
        UsuRecuperarContraseña = false,         // Contraseña Temporal que se le proporciona al Usuario Solicitante
        // DATOS DEL CORREO INSTITUCIONAL
        UsuCorreoInstitucionalCuenta = "",      // Cuenta Correo Institucional IPN generada por DCyC
        UsuCorreoInstitucionalContraseña = "",  // Contraseña del Correo Institucional IPN Generada por DCyC
        // OTROS DATOS
        // UsuFechaHoraAlta = DateTime.Parse(DateTime.Now.ToString()).Year; // Fecha y Hora de Alta del Usuario
        UsuStatus = true,                       // Usuario (1 - Activo / 0 - Inactivo)
        // DATOS FK NAVIGATION
        UsuIdAreaDeptoNavigation = null,
        UsuIdCarreraNavigation = null,
        UsuIdRolNavigation = null,
        UsuIdTipoPersonalNavigation = null
    };

    public bool BanderaCompararContraseña = true;
    private string contra2 = string.Empty;

    private void CompararCadenas()
    {
        if (string.Equals(oUsuario.UsuContraseña, contra2, StringComparison.Ordinal))
            BanderaCompararContraseña = false;
        else
            BanderaCompararContraseña = true;
    }
    public string Content = "Enviar Registro";
    public bool isSpinningHidden = true;
    private ReCAPTCHA reCAPTCHAComponent;
    private bool ValidReCAPTCHA = false;
    private bool ServerVerificatiing = false;
    private bool DisablePostButton => !ValidReCAPTCHA || BanderaCompararContraseña || !isSpinningHidden;
    private void OnSuccess() => ValidReCAPTCHA = true;
    private void OnExpired() => ValidReCAPTCHA = false;

    public async Task Registrar()
    {
        if (ValidReCAPTCHA)
        {
            try
            {
                Content = "Enviando Registro...";
                isSpinningHidden = false;

                var respuesta = await servicioUsuario.AddDataAsync(oUsuario);
                oRespuesta = respuesta.Content.ReadFromJsonAsync<Response<object>>().Result;
                Console.WriteLine("Estatus    " + oRespuesta.Success + "\n");
                Console.WriteLine("Mensaje    " + oRespuesta.Message + "\n");
                Console.WriteLine("Datos    " + oRespuesta.Data + "\n");
                if (oRespuesta.Success == 1)
                    await servicioSendEmail.SendEmailAsync(new RequestDTO_SendEmail()
                        {
                            EmailTo = oUsuario.UsuCorreoPersonalCuentaNueva,
                            Subject = "REGISTRO EN SACI",
                            Body = "Estimad@: " + oUsuario.UsuNombre + " " + oUsuario.UsuPrimerApellido + " " + oUsuario.UsuSegundoApellido + "<br><br>" +
                                               "Registro exitoso en el <b>Sistema para Atención de Correos Institucionales IPN (SACI)</b><br>"
                        });
                else
                    await servicioSendEmail.SendEmailAsync(new RequestDTO_SendEmail()
                        {
                            EmailTo = oUsuario.UsuCorreoPersonalCuentaNueva,
                            Subject = "ERROR DE REGISTRO EN SACI",
                            Body = "Estimad@: " + oUsuario.UsuNombre + " " + oUsuario.UsuPrimerApellido + " " + oUsuario.UsuSegundoApellido + "<br><br>" +
                                                 "Registro NO exitoso en el <b>Sistema para Atención de Correos Institucionales IPN (SACI)</b><br>"
                        });
            }
            catch (HttpRequestException e)
            {
                await JSRuntime.InvokeAsync<object>("alert", e.Message);
            }
            finally
            {
                Content = "Enviar Registro";
                isSpinningHidden = true;
            }
        }
    }
    bool dialogVisible { get; set; } = false;

    private async Task ScrollToTop()
    {
        await JSRuntime.InvokeVoidAsync("window.scrollTo", 0, 0);
        await JSRuntime.InvokeVoidAsync("eval", $"document.getElementById('name').focus()");
        this.dialogVisible = true;
    }

    public Response<RequestViewModel_Link>? oLinkCURP = new();
    public RequestViewModel_Link? linkCURP = new();

    protected override async Task OnInitializedAsync()
    {
        oLinkCURP = await servicioLink.GetDataByNameAsync("CURP");
        linkCURP = oLinkCURP.Data;
    }

    // Subida de archivo ---------------------------------------------------------------
    // EventConsole console;
    // void OnProgress(UploadProgressArgs args, string name)
    // {
    //     console.Log($"{args.Progress}% '{name}' / {args.Loaded} of {args.Total} bytes.");

    //     if (args.Progress == 100)
    //     {
    //         foreach (var file in args.Files)
    //         {
    //             console.Log($"Uploaded: {file.Name} / {file.Size} bytes");
    //         }
    //     }
    // }
    // 
}
