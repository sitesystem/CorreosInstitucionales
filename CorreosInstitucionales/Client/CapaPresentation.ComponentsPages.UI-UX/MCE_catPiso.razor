@page "/Pisos"

@using CorreosInstitucionales.Shared.CapaEntities.ViewModels.Request;
@using CorreosInstitucionales.Shared.CapaEntities.ViewModels.Response;
@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.catPisosService;
@using Syncfusion.Blazor.Grids


@inject IPiso servicioPiso

<h3>MCE_catPiso</h3>

@if(oResponse != null && oResponse.Data != null)
{
   
    foreach(var piso in oResponse.Data)
    {
        <div>@piso.IdPiso</div>
        <div>@piso.PisoDescripcion</div>
        <div>@piso.PisoStatus</div>
    }
    <SfGrid DataSource="@oResponse.Data" AllowPaging="true">
        <GridColumns>
            <GridColumn Field=@nameof(PisoViewModel.IdPiso) HeaderText="ID piso" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right" Width="120"></GridColumn>
            <GridColumn Field=@nameof(PisoViewModel.PisoDescripcion) HeaderText="Descripción Piso" Width="300"></GridColumn>
           
        </GridColumns>
    </SfGrid>
}
else
{
    <div>Cargando...</div>
}

<form method="get">
    <p>Descripci&#243n Piso  <input type="text" name="descripcion" size="200px"></p>
    <p>
        Status:
        <input type="radio" name="st" value="A"> Activo
        <input type="radio" name="st" value="I"> Inactivo
    </p>
</form>

@code
{
    public Response<List<PisoViewModel>>? oResponse = new Response<List<PisoViewModel>>();

    protected override async Task OnInitializedAsync()
    {
        oResponse = await servicioPiso.GetAllDataAsync(false);
    }
}
