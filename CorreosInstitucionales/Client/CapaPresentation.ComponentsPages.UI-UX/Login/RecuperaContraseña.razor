@using CorreosInstitucionales.Shared.CapaEntities.ViewModels.Request
@using CorreosInstitucionales.Shared.CapaEntities.ViewModels.Response
@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.SendEmailService
@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic.tbUsuariosService

@inject IJSRuntime JSRuntime

@inject IUsuario servicioUsuario
@inject ISendEmail servicioSendEmail

<div class="col-md-8 offset-md-2 p-5">
        <h3 style="font-variant: small-caps;">
            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-envelope-at-fill" viewBox="0 0 18 18">
                <path d="M2 2A2 2 0 0 0 .05 3.555L8 8.414l7.95-4.859A2 2 0 0 0 14 2zm-2 9.8V4.698l5.803 3.546L0 11.801Zm6.761-2.97-6.57 4.026A2 2 0 0 0 2 14h6.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.606-3.446l-.367-.225L8 9.586l-1.239-.757ZM16 9.671V4.697l-5.803 3.546.338.208A4.482 4.482 0 0 1 12.5 8c1.414 0 2.675.652 3.5 1.671" />
                <path d="M15.834 12.244c0 1.168-.577 2.025-1.587 2.025-.503 0-1.002-.228-1.12-.648h-.043c-.118.416-.543.643-1.015.643-.77 0-1.259-.542-1.259-1.434v-.529c0-.844.481-1.4 1.26-1.4.585 0 .87.333.953.63h.03v-.568h.905v2.19c0 .272.18.42.411.42.315 0 .639-.415.639-1.39v-.118c0-1.277-.95-2.326-2.484-2.326h-.04c-1.582 0-2.64 1.067-2.64 2.724v.157c0 1.867 1.237 2.654 2.57 2.654h.045c.507 0 .935-.07 1.18-.18v.731c-.219.1-.643.175-1.237.175h-.044C10.438 16 9 14.82 9 12.646v-.214C9 10.36 10.421 9 12.485 9h.035c2.12 0 3.314 1.43 3.314 3.034zm-4.04.21v.227c0 .586.227.8.581.8.31 0 .564-.17.564-.743v-.367c0-.516-.275-.708-.572-.708-.346 0-.573.245-.573.791Z" />
            </svg>
            ¿Olvidaste tu contraseña?
        </h3>
        <br />
    <EditForm Model="@oUsuario" OnValidSubmit="@RecuperarContraseña" OnInvalidSubmit="@OnInvalidSubmit">

            <DataAnnotationsValidator />
            <div class="row gy-3">
                <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                    <SfTextBox Placeholder="Correo Electrónico Personal"
                               Type="Syncfusion.Blazor.Inputs.InputType.Email"
                               @bind-Value="@oUsuario.UsuCorreoPersonalCuentaNueva"
                               FloatLabelType='@FloatLabelType.Auto'
                               ShowClearButton="true"
                               CssClass="mt-2"
                               EnableRtl="false"
                               Multiline="false"
                               Readonly="false"
                               Enabled="true"
                               onkeyup="@FullInput"/>
                    <ValidationMessage For="@(() => oUsuario.UsuCorreoPersonalCuentaNueva)" />
                </div>
                <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                    <ReCAPTCHA @ref="reCAPTCHAComponent" SiteKey="6LeMdxkpAAAAABQkCp77LSx1K8tDRlmSAYXIU6AL" OnSuccess="OnSuccess" OnExpired="OnExpired" />
                </div>
                <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                    <button type="submit" class="btn btn-success mt-4 mb-2" disabled="@DisablePostButton">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-send-plus-fill" viewBox="0 0 16 16">
                            <path d="M15.964.686a.5.5 0 0 0-.65-.65L.767 5.855H.766l-.452.18a.5.5 0 0 0-.082.887l.41.26.001.002 4.995 3.178 1.59 2.498C8 14 8 13 8 12.5a4.5 4.5 0 0 1 5.026-4.47L15.964.686Zm-1.833 1.89L6.637 10.07l-.215-.338a.5.5 0 0 0-.154-.154l-.338-.215 7.494-7.494 1.178-.471-.47 1.178Z" />
                            <path d="M16 12.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0m-3.5-2a.5.5 0 0 0-.5.5v1h-1a.5.5 0 0 0 0 1h1v1a.5.5 0 0 0 1 0v-1h1a.5.5 0 0 0 0-1h-1v-1a.5.5 0 0 0-.5-.5" />
                        </svg>&nbsp;
                        <span role="status">@Content</span>
                        <span class="spinner-border spinner-border-sm" aria-hidden="true" hidden="@isSpinningHidden"></span>
                    </button>
                </div>
            </div>
        </EditForm>



        <SfMessage ShowIcon="true"
                   Closed="(() => { isValidAccount = !isValidAccount; })"
                   ShowCloseIcon="true"
                   Severity="MessageSeverity.Error"
                   Variant="MessageVariant.Filled"
                   Visible="@isValidAccount"
                   ContentAlignment="HorizontalAlign.Center"
                   CssClass="square">
            Correo y/o Contraseña no válidos.
        </SfMessage>
    </div>

@code {
    public string Content = "Enviar correo de recuperación";
    private bool isValidAccount = false;

    private void OnInvalidSubmit()
    {
        isValidAccount = true;
    }

    public void Begin(Syncfusion.Blazor.SplitButtons.ProgressEventArgs args)
    {
        Content = "Enviar correo de recuperación";
        // CssClass = "e-hide-spinner e-info";
    }

    public void Progressing(Syncfusion.Blazor.SplitButtons.ProgressEventArgs args)
    {
        Content = "Enviando solicitud...";
    }

    public void End(Syncfusion.Blazor.SplitButtons.ProgressEventArgs args)
    {
        Content = "Enviar correo de recuperación";
    }

    //Captcha
    private ReCAPTCHA reCAPTCHAComponent;

    private bool ValidReCAPTCHA = false;

    private bool ServerVerificatiing = false;

    private bool DisablePostButton => !ValidReCAPTCHA || BanderaVacio || !isSpinningHidden;

    private void OnSuccess() => ValidReCAPTCHA = true;

    private void OnExpired() => ValidReCAPTCHA = false;

    //Envio de mensaje
    public Response<object>? oRespuesta = new();

    public class RecuperarContraseñaCorreo
    {
        public string? CorreoPersonal { get; set; }
    }

    public RecuperarContraseñaCorreo oRecuperarContraseñaCorreo = new();
    public UsuarioViewModel? oUsuario = new();


    public bool isSpinningHidden = true;
    public async Task RecuperarContraseña()
    {
        if (ValidReCAPTCHA)
        {
            // var response = await reCAPTCHAComponent.GetResponseAsync();

            try
            {
                // ServerVerificatiing = true;
                // StateHasChanged();
                // await Http.PostAsJsonAsync("/api/sample", new SampleAPIArgs { reCAPTCHAResponse = response });

                // Console.WriteLine("IdRol: " + oUsuario.UsuIdRol);
                // Console.WriteLine("UsuIdTipoPersonal: " + oUsuario.UsuIdTipoPersonal);
                // Console.WriteLine("UsuNombre: " + oUsuario.UsuNombre);
                // Console.WriteLine("UsuPrimerApellido: " + oUsuario.UsuPrimerApellido);
                // Console.WriteLine("UsuSegundoApellido: " + oUsuario.UsuSegundoApellido);
                // Console.WriteLine("UsuCurp: " + oUsuario.UsuCurp);
                // Console.WriteLine("UsuFileNameCurp: " + oUsuario.UsuFileNameCurp);
                // Console.WriteLine("UsuNoCelularAnterior: " + oUsuario.UsuNoCelularAnterior);
                // Console.WriteLine("UsuNoCelularNuevo: " + oUsuario.UsuNoCelularNuevo);
                // Console.WriteLine("UsuBoletaAlumno: " + oUsuario.UsuBoletaAlumno);
                // Console.WriteLine("UsuBoletaMaestria: " + oUsuario.UsuBoletaMaestria);
                // Console.WriteLine("UsuIdCarrera: " + oUsuario.UsuIdCarrera);
                // Console.WriteLine("UsuSemestre: " + oUsuario.UsuSemestre);
                // Console.WriteLine("UsuAñoEgreso: " + oUsuario.UsuAñoEgreso);
                // Console.WriteLine("UsuFileNameComprobanteInscripcion: " + oUsuario.UsuFileNameComprobanteInscripcion);
                // Console.WriteLine("UsuNumeroEmpleado: " + oUsuario.UsuNumeroEmpleado);
                // Console.WriteLine("UsuIdAreaDepto: " + oUsuario.UsuIdAreaDepto);
                // Console.WriteLine("UsuNoExtension: " + oUsuario.UsuNoExtension);
                // Console.WriteLine("UsuCorreoPersonalCuentaAnterior: " + oUsuario.UsuCorreoPersonalCuentaAnterior);
                // Console.WriteLine("UsuCorreoPersonalCuentaNueva: " + oUsuario.UsuCorreoPersonalCuentaNueva);
                // Console.WriteLine("UsuContraseña: " + oUsuario.UsuContraseña);
                // Console.WriteLine("UsuRecuperarContraseña: " + oUsuario.UsuRecuperarContraseña);
                // Console.WriteLine("UsuCorreoInstitucionalCuenta: " + oUsuario.UsuCorreoInstitucionalCuenta);
                // Console.WriteLine("UsuCorreoInstitucionalContraseña: " + oUsuario.UsuCorreoInstitucionalContraseña);
                // Console.WriteLine("UsuFechaHoraAlta: " + oUsuario.UsuFechaHoraAlta);
                // Console.WriteLine("UsuStatus: " + oUsuario.UsuStatus);

                Content = "Enviando solicitud...";
                isSpinningHidden = false;

                var respuesta = await servicioUsuario.AddDataAsync(oUsuario);
                oRespuesta = respuesta.Content.ReadFromJsonAsync<Response<object>>().Result;

                if (oRespuesta.Success == 1)
                    await servicioSendEmail.SendEmailAsync(new SendEmailViewModel()
                        {
                            EmailTo = oUsuario.UsuCorreoPersonalCuentaNueva,
                            Subject = "Correo de recuperación",
                            Body = "Estimad@: " + 
                            " " + oUsuario.UsuPrimerApellido + " " + oUsuario.UsuSegundoApellido + "<br><br>" +
                                               "Se le ha asignado un token para su acceso que tendrá que cambiar al entrar al sistema, porque se elminará dicho token. <br><br>"+ 
                                               "Por favor resguarde sus credenciales adecuadamente. <br><br>" +                                               
                                               "<b>Sistema para Atención de Correos Institucionales IPN (SACI)</b><br>"
                        });
                else
                    await servicioSendEmail.SendEmailAsync(new SendEmailViewModel()
                        {
                            EmailTo = oUsuario.UsuCorreoPersonalCuentaNueva,
                            Subject = "ERROR DE REGISTRO EN SACI",
                            Body = "Estimad@: " + oUsuario.UsuNombre + " " + oUsuario.UsuPrimerApellido + " " + oUsuario.UsuSegundoApellido + "<br><br>" +
                                                 "Recuperación fracaso en el <b>Sistema para Atención de Correos Institucionales IPN (SACI)</b><br>"+
                                                         "Si el problema persisite <b>Acudir a la Unidad Informática.</b><br>"
                        });
            }
            catch (HttpRequestException e)
            {
                await JSRuntime.InvokeAsync<object>("alert", e.Message);
                // ServerVerificatiing = false;
                // StateHasChanged();
            }
            finally
            {
                Content = "Enviar correo de recuperación";
                isSpinningHidden = true;
            }
        }
    }
    // SFTEXTBOX VACIO
    
    public bool BanderaVacio = true;

    private void FullInput()
    {
        if (!(oUsuario.UsuCorreoPersonalCuentaNueva==null))
            BanderaVacio = false;
        else    
            BanderaVacio = true;
    }
}
