@page "/catalogo/escuelas"

@attribute [Authorize(Policy = "[Rol] Ambos")]

@inject DialogService DialogService

<PageTitle>@Title</PageTitle>

<div class="p-4 rounded-1 bg-white shadow">
    <h1>@Title</h1>

    <table class="table table-hover">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>ACCIONES</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>
                        @if(item.EscStatus)
                        {
                            <text>@item.EscNombreLargo (@item.EscNombreCorto)</text>
                        }
                        else
                        {
                            <del>@item.EscNombreLargo (@item.EscNombreCorto)</del>
                        }
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary form-control" @onclick="async ()=> await Editar(item)">
                            Editar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@code
{
    private string Title = "Catálogo de Escuelas";
    private List<RequestViewModel_Escuela> items = new List<RequestViewModel_Escuela>();



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            items = await WebUtils.ListByStatusAsync(servicioEscuela, false);



            StateHasChanged();
        }
    }

    private async Task Editar(RequestViewModel_Escuela item)
    {
        string json = JsonSerializer.Serialize(item);
        RequestViewModel_Escuela? registro = JsonSerializer.Deserialize<RequestViewModel_Escuela>(json);

        if (registro is not null)
        {
            RequestViewModel_Escuela? result = await DialogService.OpenAsync<EscuelaEditor>
                (
                    "Actualizar Datos",
                    new Dictionary<string, object>() {
                    {"registro", registro},

                        },
                    new DialogOptions() { ShowClose = false, Width = "75%" }
                );
            //CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true,

            if (result is not null)
            {
                HttpResponseMessage response = await servicioEscuela.EditDataAsync(registro);
                if (response.IsSuccessStatusCode)
                {
                    items = await WebUtils.ListByStatusAsync(servicioEscuela, false);
                }
            }
        }
    }
}
