@page "/PerfilUsuario"

@attribute [AllowAnonymous]

@using CorreosInstitucionales.Client.CapaPresentation_ComponentsPages_UI_UX.MóduloRegistros

@inject IUsuarioService servicioUsuario

<h3>Modificación de Datos de perfil</h3>
@switch (oUsuario.UsuIdTipoPersonal)
{
    case 1:
        Console.WriteLine("El tipo usuario es: Alumno inscrito");
        <AlumnoInscritoEgresado></AlumnoInscritoEgresado>
        //navigationManager.NavigateTo("/RegistroInscrito");
        break;        
    case 2:
        Console.WriteLine("El tipo usuario es: Alumno egresado");
        //navigationManager.NavigateTo("/RegistroInscrito");
        break;
    case 3:
        Console.WriteLine("El tipo usuario es: Maestría");
        <AlumnoMaestria></AlumnoMaestria>
        //navigationManager.NavigateTo("/RegistroMaestria");
        break;
    case 4:
        Console.WriteLine("El tipo usuario es: Administrativo");
        <EmpleadoAdministrativoDocente TipoPersonal="4"></EmpleadoAdministrativoDocente>
        //navigationManager.NavigateTo("/RegistroAdministrativo");
        break;
    case 5:
        Console.WriteLine("El tipo usuario es: Docente");
        //navigationManager.NavigateTo("/RegistroDocente");
        break;
    case 6:
        Console.WriteLine("El tipo usuario es: Honorarios");
        <EmpleadoHonorarios></EmpleadoHonorarios>
        //navigationManager.NavigateTo("/RegistroHonorario");
        break;
    default: 
        //tipousuario=0;
        break;
    }



@code
{
    public Response<RequestDTO_Usuario> oResponseUsuario = new();
    public RequestDTO_Usuario oUsuario = new();
    private string? authMessage;
    private List<Claim> claims = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await servicioAuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            int idTipoPersonal = Convert.ToInt32(user.Claims.FirstOrDefault(c => c.Type == "TipoPersonal")?.Value);
            int idUsuario = Convert.ToInt32(user.Claims.FirstOrDefault(c => c.Type == "ID")?.Value);
            oResponseUsuario = await servicioUsuario.GetDataByIdAsync(idUsuario);
            oUsuario = oResponseUsuario.Data;
        }
        else
            navigationManager.NavigateTo("/");
    }
}
