@page "/Index"

@attribute [Authorize]

@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Layouts
@using System.Timers

@inject NavigationManager NavigationManager
@inject NavigationManager Navigation

<style>
	.e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {
		line-height: 40px;
		height: 40px;
	}

	.fluent .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header,
	.fluent-dark .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {
		height: 56px;
	}

	.bootstrap5 .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header,
	.bootstrap5-dark .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header,
	.tailwind .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header,
	.fluent .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header,
	.fluent-dark .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header,
	.tailwind-dark .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {
		line-height: inherit;
	}

	.root-container {
		height: 100%;
	}

	.title {
		font-size: 16px;
		font-weight: 400;
	}

	.category-text {
		float: left;
		line-height: 30px;
	}

	.category-icon {
		float: left;
		background-repeat: no-repeat;
		background-position-x: center;
		background-size: 100%;
		height: 30px;
		width: 30px;
		display: inline-block;
		margin-right: 10px;
	}

	.item-container {
		display: flex;
		text-align: center;
		height: 70%;
		padding: 2rem;
		font-size: 22px;
		font-weight: 400;
	}

		.item-container.income {
			color: #17a00e
		}

		.item-container.balance {
			color: #008cff;
		}

		.item-container.transaction {
			color: #f41127;
		}

		.item-container.expense {
			color: #ca765a;
		}

	.bottom-container {
		text-align: center;
		font-weight: 400;
		font-size: 16px;
	}

	.mobile .bottom-container {
		font-size: 30px;
	}

	.material .bottom-container,
	.fabric .bottom-container,
	.bootstrap .bottom-container,
	.bootstrap4 .bottom-container,
	.tailwind .bottom-container,
	.bootstrap5 .bottom-container {
		color: #4c5258;
	}

	.amt-payment.expense-payment {
		font-weight: bold;
		color: #ff5e65;
	}

	.amt-payment.income-payment {
		font-weight: bold;
		color: #04cd93;
	}

	.auto-left {
		margin-left: auto;
	}

	.e-panel-cotent {
		padding: 1rem;
	}

	@@font-face {
		font-family: 'e-sb-icons';
		src: url(data:application/x-font-ttf;charset=utf-8;base64,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) format("truetype");
		font-weight: normal;
		font-style: normal;
	}

	.balance:after {
		content: "\e900";
		font-size: 24px;
		font-family: "e-sb-icons";
	}

	.expense:after {
		content: "\e901";
		font-size: 24px;
		font-family: "e-sb-icons";
	}

	.income:after {
		content: "\e902";
		font-size: 24px;
		font-family: "e-sb-icons";
	}

	.transaction:after {
		content: "\e903";
		font-size: 24px;
		font-family: "e-sb-icons";
	}

	.e-headercelldiv span.e-headertext {
		font-size: 14px;
		font-weight: 500;
	}

	.e-grid .e-rowcell {
		font-size: 13px;
	}

	.mobile .e-control.e-lib.e-dashboardlayout.e-responsive {
		z-index: 0;
		overflow: scroll;
	}

	.mobile .item-container {
		padding: 40px;
		font-size: 40px;
	}

	.mobile .balance:after {
		content: "\e900";
		font-size: 40px;
		font-family: "e-sb-icons";
	}

	.mobile .expense:after {
		content: "\e901";
		font-size: 40px;
		font-family: "e-sb-icons";
	}

	.mobile .income:after {
		content: "\e902";
		font-size: 40px;
		font-family: "e-sb-icons";
	}

	.mobile .transaction:after {
		content: "\e903";
		font-size: 40px;
		font-family: "e-sb-icons";
	}

	.e-control.e-lib.e-dashboardlayout.e-responsive {
		z-index: 0;
	}

	.e-dashboardlayout.e-control .e-panel .e-panel-container .e-grid.sf-grid .e-gridcontent .e-content.e-yscroll {
		overflow: auto;
	}

	body.tailwind-dark .e-dashboardlayout.e-control .e-panel {
		border: 1px #435266 solid;
	}

	.e-gridheader {
		padding-right: 0px !important;
	}
</style>

<PageTitle>Inicio | Panel de Control</PageTitle>
@* <SurveyPrompt Title="How is Blazor working for you?" /> *@

<AuthorizeView Policy="[Rol] Usuario Solicitante">
	<Authorized>
		<SfLinearGauge Orientation="Syncfusion.Blazor.LinearGauge.Orientation.Horizontal" Width="70%">
			<LinearGaugeAnnotations>
				<LinearGaugeAnnotation AxisValue="5" ZIndex="1" X="-30" Y="-80">
					<ContentTemplate>
						<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-hand-index-thumb" viewBox="0 0 16 16">
							<path d="M6.75 1a.75.75 0 0 1 .75.75V8a.5.5 0 0 0 1 0V5.467l.086-.004c.317-.012.637-.008.816.027.134.027.294.096.448.182.077.042.15.147.15.314V8a.5.5 0 0 0 1 0V6.435l.106-.01c.316-.024.584-.01.708.04.118.046.3.207.486.43.081.096.15.19.2.259V8.5a.5.5 0 1 0 1 0v-1h.342a1 1 0 0 1 .995 1.1l-.271 2.715a2.5 2.5 0 0 1-.317.991l-1.395 2.442a.5.5 0 0 1-.434.252H6.118a.5.5 0 0 1-.447-.276l-1.232-2.465-2.512-4.185a.517.517 0 0 1 .809-.631l2.41 2.41A.5.5 0 0 0 6 9.5V1.75A.75.75 0 0 1 6.75 1M8.5 4.466V1.75a1.75 1.75 0 1 0-3.5 0v6.543L3.443 6.736A1.517 1.517 0 0 0 1.07 8.588l2.491 4.153 1.215 2.43A1.5 1.5 0 0 0 6.118 16h6.302a1.5 1.5 0 0 0 1.302-.756l1.395-2.441a3.5 3.5 0 0 0 .444-1.389l.271-2.715a2 2 0 0 0-1.99-2.199h-.581a5.114 5.114 0 0 0-.195-.248c-.191-.229-.51-.568-.88-.716-.364-.146-.846-.132-1.158-.108l-.132.012a1.26 1.26 0 0 0-.56-.642 2.632 2.632 0 0 0-.738-.288c-.31-.062-.739-.058-1.05-.046zm2.094 2.025" />
						</svg>
					</ContentTemplate>
				</LinearGaugeAnnotation>
				<LinearGaugeAnnotation AxisValue="10" ZIndex="1" X="-30" Y="-80">
					<ContentTemplate>
						<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-cart3" viewBox="0 0 16 16">
							<path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .49.598l-1 5a.5.5 0 0 1-.465.401l-9.397.472L4.415 11H13a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5M3.102 4l.84 4.479 9.144-.459L13.89 4H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4m7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2m7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2" />
						</svg>
					</ContentTemplate>
				</LinearGaugeAnnotation>
				<LinearGaugeAnnotation AxisValue="15" ZIndex="1" X="-24" Y="-80">
					<ContentTemplate>
						<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
							<path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
							<path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
						</svg>
					</ContentTemplate>
				</LinearGaugeAnnotation>
				<LinearGaugeAnnotation AxisValue="20" ZIndex="1" X="-25" Y="-80">
					<ContentTemplate>
						<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-cash-coin" viewBox="0 0 16 16">
							<path fill-rule="evenodd" d="M11 15a4 4 0 1 0 0-8 4 4 0 0 0 0 8m5-4a5 5 0 1 1-10 0 5 5 0 0 1 10 0" />
							<path d="M9.438 11.944c.047.596.518 1.06 1.363 1.116v.44h.375v-.443c.875-.061 1.386-.529 1.386-1.207 0-.618-.39-.936-1.09-1.1l-.296-.07v-1.2c.376.043.614.248.671.532h.658c-.047-.575-.54-1.024-1.329-1.073V8.5h-.375v.45c-.747.073-1.255.522-1.255 1.158 0 .562.378.92 1.007 1.066l.248.061v1.272c-.384-.058-.639-.27-.696-.563h-.668zm1.36-1.354c-.369-.085-.569-.26-.569-.522 0-.294.216-.514.572-.578v1.1h-.003zm.432.746c.449.104.655.272.655.569 0 .339-.257.571-.709.614v-1.195l.054.012z" />
							<path d="M1 0a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h4.083c.058-.344.145-.678.258-1H3a2 2 0 0 0-2-2V3a2 2 0 0 0 2-2h10a2 2 0 0 0 2 2v3.528c.38.34.717.728 1 1.154V1a1 1 0 0 0-1-1z" />
							<path d="M9.998 5.083 10 5a2 2 0 1 0-3.132 1.65 5.982 5.982 0 0 1 3.13-1.567z" />
						</svg>
					</ContentTemplate>
				</LinearGaugeAnnotation>
				<LinearGaugeAnnotation AxisValue="25" ZIndex="1" X="-24" Y="-80">
					<ContentTemplate>
						<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-journal-arrow-down" viewBox="0 0 16 16">
							<path fill-rule="evenodd" d="M8 5a.5.5 0 0 1 .5.5v3.793l1.146-1.147a.5.5 0 0 1 .708.708l-2 2a.5.5 0 0 1-.708 0l-2-2a.5.5 0 1 1 .708-.708L7.5 9.293V5.5A.5.5 0 0 1 8 5" />
							<path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2" />
							<path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z" />
						</svg>
					</ContentTemplate>
				</LinearGaugeAnnotation>
			</LinearGaugeAnnotations>

			<LinearGaugeEvents AxisLabelRendering="AxisLabelChange1" />
			<LinearGaugeAxes>
				<LinearGaugeAxis Minimum="5" Maximum="25" OpposedPosition="true">
					<LinearGaugeLine Width="5" />
					<LinearGaugeMajorTicks Height="0" />
					<LinearGaugeMinorTicks Height="0" />
					<LinearGaugeAxisLabelStyle Offset="24">
						<LinearGaugeAxisLabelFont FontFamily="inherit" Size="16px" />
					</LinearGaugeAxisLabelStyle>
					<LinearGaugePointers>
						<LinearGaugePointer PointerValue="5" Height="25" Width="25" Placement="Syncfusion.Blazor.LinearGauge.Placement.Near" MarkerType="Syncfusion.Blazor.LinearGauge.MarkerType.Image" ImageUrl="https://blazor.syncfusion.com/wasm/demos/_content/Blazor_WASM_Common_NET8/images/linear-gauge/tick-icon.png" />
						<LinearGaugePointer PointerValue="10" Height="25" Width="25" Placement="Syncfusion.Blazor.LinearGauge.Placement.Near" MarkerType="Syncfusion.Blazor.LinearGauge.MarkerType.Image" ImageUrl="https://blazor.syncfusion.com/wasm/demos/_content/Blazor_WASM_Common_NET8/images/linear-gauge/tick-icon.png" />
						<LinearGaugePointer PointerValue="15" Height="25" Width="25" Placement="Syncfusion.Blazor.LinearGauge.Placement.Near" MarkerType="Syncfusion.Blazor.LinearGauge.MarkerType.Image" ImageUrl="https://blazor.syncfusion.com/wasm/demos/_content/Blazor_WASM_Common_NET8/images/linear-gauge/tick-icon.png" />
						<LinearGaugePointer PointerValue="20" Height="25" Width="15" Placement="Syncfusion.Blazor.LinearGauge.Placement.Center" Position="Syncfusion.Blazor.LinearGauge.Position.Cross" Color="#D1D9DD" MarkerType="Syncfusion.Blazor.LinearGauge.MarkerType.Circle" Offset="-2" />
						<LinearGaugePointer PointerValue="25" Height="25" Width="15" Placement="Syncfusion.Blazor.LinearGauge.Placement.Center" Position="Syncfusion.Blazor.LinearGauge.Position.Cross" Color="#D1D9DD" MarkerType="Syncfusion.Blazor.LinearGauge.MarkerType.Circle" Offset="-2" />
					</LinearGaugePointers>
					<LinearGaugeRanges>
						<LinearGaugeRange Start="5" End="10" StartWidth="5" EndWidth="5" Color="#1FAC8A" />
						<LinearGaugeRange Start="10" End="15" StartWidth="5" EndWidth="5" Color="#1FAC8A" />
						<LinearGaugeRange Start="15" End="20" StartWidth="5" EndWidth="5" Color="#D1D9DD" />
						<LinearGaugeRange Start="20" End="25" StartWidth="5" EndWidth="5" Color="#D1D9DD" />
					</LinearGaugeRanges>
				</LinearGaugeAxis>
			</LinearGaugeAxes>
		</SfLinearGauge>

		<SfLinearGauge Orientation="Syncfusion.Blazor.LinearGauge.Orientation.Horizontal" Theme="@Theme" Background="transparent">
			<LinearGaugeEvents AxisLabelRendering="AxisLabelChange" />
			<LinearGaugeAxes>
				<LinearGaugeAxis Minimum="5" Maximum="20" OpposedPosition="true">
					<LinearGaugeLine Width="5" />
					<LinearGaugeMajorTicks Height="0" Interval="5" />
					<LinearGaugeMinorTicks Height="0" />
					<LinearGaugeAxisLabelStyle Offset="10">
						<LinearGaugeAxisLabelFont FontFamily="inherit" Size="16px" />
					</LinearGaugeAxisLabelStyle>
					<LinearGaugePointers>
						<LinearGaugePointer PointerValue="5" Height="25" Width="25" Placement="Syncfusion.Blazor.LinearGauge.Placement.Near" MarkerType="Syncfusion.Blazor.LinearGauge.MarkerType.Image" ImageUrl="" />
						<LinearGaugePointer PointerValue="10" Height="25" Width="25" Placement="Syncfusion.Blazor.LinearGauge.Placement.Near" MarkerType="Syncfusion.Blazor.LinearGauge.MarkerType.Image" ImageUrl="" />
						<LinearGaugePointer PointerValue="15" Height="25" Width="25" Placement="Syncfusion.Blazor.LinearGauge.Placement.Near" MarkerType="Syncfusion.Blazor.LinearGauge.MarkerType.Image" ImageUrl="" />
						<LinearGaugePointer PointerValue="20" Height="25" Width="15" Placement="Syncfusion.Blazor.LinearGauge.Placement.Center" Position="Syncfusion.Blazor.LinearGauge.Position.Cross" Color="#D1D9DD" MarkerType="Syncfusion.Blazor.LinearGauge.MarkerType.Circle" Offset="-2" />
					</LinearGaugePointers>
					<LinearGaugeRanges>
						<LinearGaugeRange Start="5" End="10" StartWidth="5" EndWidth="5" Color="#1FAC8A" />
						<LinearGaugeRange Start="10" End="15" StartWidth="5" EndWidth="5" Color="#1FAC8A" />
						<LinearGaugeRange Start="15" End="20" StartWidth="5" EndWidth="5" Color="#D1D9DD" />
					</LinearGaugeRanges>
				</LinearGaugeAxis>
			</LinearGaugeAxes>
		</SfLinearGauge>
	</Authorized>
	<NotAuthorized>
		<p>No Autorizado</p>
	</NotAuthorized>
	<Authorizing>
		<p>Autorizando...</p>
	</Authorizing>
</AuthorizeView>

<AuthorizeView Policy="[Rol] Administrador">
	<Authorized>
		<div class="control-section">
			<SfDashboardLayout @ref="dashboardObject" Columns="8" CellSpacing="@Spacing" CellAspectRatio="@Ratio">
				<DashboardLayoutPanels>
					<DashboardLayoutPanel Column="0" Row="0" SizeX="2" SizeY="1">
						<ContentTemplate>
							<div class="root-container">
								<div class="item-container income">
									<p>$43,300</p>
									<div class="auto-left">
										<span class="income-icon e-icon"></span>
									</div>
								</div>
								<div class="bottom-container">
									<p>Income</p>
								</div>
							</div>
						</ContentTemplate>
					</DashboardLayoutPanel>
					<DashboardLayoutPanel Column="2" Row="0" SizeX="2" SizeY="1">
						<ContentTemplate>
							<div class="root-container">
								<div class="item-container expense">
									<p>$38,060</p>
									<div class="auto-left">
										<span class="expense-icon e-icon"></span>
									</div>
								</div>
								<div class="bottom-container">
									<p>Expenses</p>
								</div>
							</div>
						</ContentTemplate>
					</DashboardLayoutPanel>
					<DashboardLayoutPanel Column="4" Row="0" SizeX="2" SizeY="1">
						<ContentTemplate>
							<div class="root-container">
								<div class="item-container balance">
									<p>$38,060</p>
									<div class="auto-left">
										<span class="balance-icon e-icon"></span>
									</div>
								</div>
								<div class="bottom-container">
									<p>Balance</p>
								</div>
							</div>
						</ContentTemplate>
					</DashboardLayoutPanel>
					<DashboardLayoutPanel Column="6" Row="0" SizeX="2" SizeY="1">
						<ContentTemplate>
							<div class="root-container">
								<div class="item-container transaction">
									<p>$38,060</p>
									<div class="auto-left">
										<span class="transaction-icon e-icon"></span>
									</div>
								</div>
								<div class="bottom-container">
									<p>Transactions</p>
								</div>
							</div>
						</ContentTemplate>
					</DashboardLayoutPanel>
					<DashboardLayoutPanel Column="0" Row="1" SizeX="4" SizeY="3">
						<HeaderTemplate>
							<span class="title">Income - Expense</span>
						</HeaderTemplate>
						<ContentTemplate>
							<SfChart Height="100%" Width="100%" Theme="@Theme">
								<ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
								<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTimeCategory" LabelFormat="MMM" IntervalType="Syncfusion.Blazor.Charts.IntervalType.Months" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
									<ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
								</ChartPrimaryXAxis>
								<ChartPrimaryYAxis LabelFormat="${value}" Minimum="1000" Maximum="9000" Interval="2000">
									<ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
									<ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
								</ChartPrimaryYAxis>
								<ChartTooltipSettings Enable="true"></ChartTooltipSettings>
								<ChartSeriesCollection>
									<ChartSeries DataSource="@IncomeExpenseData" Name="Income" XName="Period" Width="2"
												 Opacity="0.5" YName="Income" Type="Syncfusion.Blazor.Charts.ChartSeriesType.SplineArea" Fill="#00BCD7">
									</ChartSeries>
									<ChartSeries DataSource="@IncomeExpenseData" Name="Expense" XName="Period" Width="2"
												 Opacity="0.5" YName="Expense" Type="Syncfusion.Blazor.Charts.ChartSeriesType.SplineArea" Fill="#CDDE1F">
									</ChartSeries>
								</ChartSeriesCollection>
							</SfChart>
						</ContentTemplate>
					</DashboardLayoutPanel>
					<DashboardLayoutPanel Column="4" Row="1" SizeX="4" SizeY="3">
						<HeaderTemplate>
							<span class="title">Total Expenses</span>
						</HeaderTemplate>
						<ContentTemplate>
							<SfAccumulationChart Height="100%" Width="100%" EnableAnimation="false" EnableSmartLabels="true" Theme="@Theme">
								<AccumulationChartSeriesCollection>
									<AccumulationChartSeries DataSource="@PieRenderingData" XName="Text" YName="Y" Radius="83%" StartAngle="0" EndAngle="360" InnerRadius="50%" Palettes="@palettes">
										<AccumulationDataLabelSettings Visible="true" Name="X" Position="AccumulationLabelPosition.Outside">
											<AccumulationChartConnector Length="10%"></AccumulationChartConnector>
											<AccumulationChartDataLabelFont Size="14px" FontFamily="Roboto"></AccumulationChartDataLabelFont>
										</AccumulationDataLabelSettings>
									</AccumulationChartSeries>
								</AccumulationChartSeriesCollection>
								<AccumulationChartTooltipSettings Enable="true"></AccumulationChartTooltipSettings>
								<AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
							</SfAccumulationChart>
						</ContentTemplate>
					</DashboardLayoutPanel>
					<DashboardLayoutPanel Column="0" Row="4" SizeX="8" SizeY="3">
						<HeaderTemplate>
							<span class="title">Recent Transactions</span>
						</HeaderTemplate>
						<ContentTemplate>
							<SfGrid TValue="TransactionData" DataSource="@TransactData" Width="100%" Height="100%" AllowSorting="true" EnableHover="false" AllowPaging="false">
								<GridColumns>
									<GridColumn Field="@nameof(TransactionData.TransactoinId)" HeaderText="Transaction ID" Width="120" TextAlign="@Syncfusion.Blazor.Grids.TextAlign.Center"></GridColumn>
									<GridColumn Field="@nameof(TransactionData.Category)" HeaderText="Category" Width="120">
										@* <Template>
											@{
												var expense = (contexto as TransactionData);
												<div class="normalRes">
													<div class="category-icon @contexto.IconCss"></div>
													<div class='category-text'>@contexto.Category</div>
												</div>
											}
										</Template> *@
									</GridColumn>
									<GridColumn Field="@nameof(TransactionData.PaymentMode)" HeaderText="Payment Mode" Width="160" TextAlign="@Syncfusion.Blazor.Grids.TextAlign.Center"></GridColumn>
									<GridColumn Field="@nameof(TransactionData.Description)" HeaderText="Description" Width="160" TextAlign="@Syncfusion.Blazor.Grids.TextAlign.Center"></GridColumn>
									<GridColumn Field="@nameof(TransactionData.Amount)" HeaderText="Amount" Width="120" TextAlign="@Syncfusion.Blazor.Grids.TextAlign.Center">
										@* <Template>
											@{
												var expense = (context as TransactionData);
												<div class="normalRes">
													<div class='amt-payment @(expense.IsExpense ? "expense-payment" : "income-payment")'>
														<span>$</span><span>@expense.Amount</span>
													</div>
												</div>
											}
										</Template> *@
									</GridColumn>
								</GridColumns>
							</SfGrid>
						</ContentTemplate>
					</DashboardLayoutPanel>
				</DashboardLayoutPanels>
			</SfDashboardLayout>
		</div>
	</Authorized>
	<NotAuthorized>
		<p>No Autorizado</p>
	</NotAuthorized>
	<Authorizing>
		<p>Autorizando...</p>
	</Authorizing>
</AuthorizeView>

@code
{
	SfDashboardLayout dashboardObject;
	private Theme Theme { get; set; }
	private double[] Spacing = new double[] { 15, 15 };
	private double Ratio = 160 / 100;
	private List<TransactionData> TransactData = new List<TransactionData> {
	new TransactionData { Category = "Food", Amount = 6, PaymentMode = "Debit Card", IconCss = "food", IsExpense = true, IsIncome = false, TransactoinId = "#131614678", Description = "Palmetto Cheese, Mint julep" },
	new TransactionData { Category = "Transportation", Amount = 7, PaymentMode = "Debit Card", IconCss = "travel", IsExpense = true, IsIncome = false, TransactoinId = "#131416876", Description = "Other vehicle expenses" },
	new TransactionData { Category = "Housing", Amount = 20, PaymentMode = "Credit Card", IconCss = "housing", IsExpense = true, IsIncome = false, TransactoinId = "#1711148579", Description = "Laundry and cleaning supplies" },
	new TransactionData { Category = "Extra Income", Amount = 110, PaymentMode = "Cash", IconCss = "extra-income", IsExpense = false, IsIncome = true, TransactoinId = "#1922419785", Description = "Income from Sale" },
	new TransactionData { Category = "Food", Amount = 10, PaymentMode = "Credit Card", IconCss = "food", IsExpense = true, IsIncome = false, TransactoinId = "#2744145880", Description = "Muffuletta sandwich, Mint julep" }
	};
	private List<RenderingData> PieRenderingData = new List<RenderingData>
	{
	new RenderingData { X = "Mortgage / Rent", Text="15.76%", Y = 6000 },
	new RenderingData { X = "Food", Text="12.79%", Y = 4866 },
	new RenderingData { X = "Utilities", Text="10.93%", Y = 4160 },
	new RenderingData { X = "Bills", Text="10.4%", Y = 3960 },
	new RenderingData { X = "Shopping", Text="8.87%", Y = 3375 },
	new RenderingData { X = "Transportation", Text="8.49%", Y = 3230 },
	new RenderingData { X = "Insurance", Text="7.59%", Y = 2890 },
	new RenderingData { X = "Health Care", Text="6.52%", Y = 2480 },
	new RenderingData { X = "Clothing", Text="5.92%", Y = 2255 },
	new RenderingData { X = "Others", Text="12.73%", Y = 4844 }
	};
	private List<IncomeExpense> IncomeExpenseData = new List<IncomeExpense>
	{
	new IncomeExpense { Period = new DateTime(2021, 01, 01), Income = 7490, Expense = 6973 },
	new IncomeExpense { Period = new DateTime(2021, 02, 01), Income = 6840, Expense = 6060 },
	new IncomeExpense { Period = new DateTime(2021, 03, 01), Income = 6060, Expense = 5500 },
	new IncomeExpense { Period = new DateTime(2012, 04, 01), Income = 8190, Expense = 7059 },
	new IncomeExpense { Period = new DateTime(2021, 05, 01), Income = 7320, Expense = 6333 },
	new IncomeExpense { Period = new DateTime(2021, 06, 01), Income = 7380, Expense = 6135 }
	};
	private string[] palettes = new string[] { "#61EFCD", "#CDDE1F", "#FEC200", "#CA765A", "#2485FA", "#F57D7D", "#C152D2",
	"#8854D9", "#3D4EB8", "#00BCD7","#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5", "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300" };
	protected override void OnInitialized()
	{
		// Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
	}
	private class RenderingData
	{
		public string X { get; set; }
		public int Y { get; set; }
		public string Text { get; set; }
		public string Fill { get; set; }
	}
	private class IncomeExpense
	{
		public DateTime Period { get; set; }
		public int Income { get; set; }
		public int Expense { get; set; }
	}
	private class TransactionData
	{
		public string Category { get; set; }
		public string Description { get; set; }
		public string PaymentMode { get; set; }
		public string IconCss { get; set; }
		public string TransactoinId { get; set; }
		public bool IsIncome { get; set; }
		public bool IsExpense { get; set; }
		public int Amount { get; set; }
	}

	private void AxisLabelChange(Syncfusion.Blazor.LinearGauge.AxisLabelRenderEventArgs args)
	{
		if (args.Text == "5")
			args.Text = "Ordered";
		else if (args.Text == "10")
			args.Text = "Packed";
		else if (args.Text == "15")
			args.Text = "Shipped";
		else if (args.Text == "20")
			args.Text = "Delivered";
		else
			args.Text = " ";
	}

	private void AxisLabelChange1(Syncfusion.Blazor.LinearGauge.AxisLabelRenderEventArgs args)
	{
		if (args.Text == "5")
			args.Text = "Select Item";
		else if (args.Text == "10")
			args.Text = "Add To Cart";
		else if (args.Text == "15")
			args.Text = "Fill Details";
		else if (args.Text == "20")
			args.Text = "Make Payment";
		else if (args.Text == "25")
			args.Text = "Download eBook";
		else
			args.Text = " ";
	}
}
