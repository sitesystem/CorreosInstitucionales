@if (oUsuario is not null && oUsuario.Data != null)
{
    <RadzenPanel Visible="@(existenSolicitudes)">
        <RadzenFieldset AllowCollapse="false" ExpandTitle="Seguimiento de Solicitud" CollapseTitle="Seguimiento de Solicitud" ExpandAriaLabel="" CollapseAriaLabel="" class="rz-border-base-500 rz-border-radius-1 rz-shadow-3 mt-0 py-0">
            <HeaderTemplate>
                <span class="d-inline-flex align-items-center align-middle">
                    <RadzenIcon Icon="hourglass_top" IconColor="@Colors.Secondary" />&ensp;<b style="font-variant: small-caps;">Seguimiento de la Solicitud de Ticket</b>
                </span>
            </HeaderTemplate>
            <ChildContent>
                <div class="row gap-0 mt-1 mb-0">
                    <div class="col-md-1 text-center">
                        <RadzenText TextStyle="TextStyle.Overline" TextAlign="TextAlign.Center" class="">#TICKET:</RadzenText>
                        <RadzenText TextStyle="TextStyle.DisplayH6" Style="border:3px solid rgb(215,215,215); border-radius:25px;" class="text-danger p-1">
                            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-tag-fill rz-color-success" viewBox="0 0 16 16">
                                <path d="M2 1a1 1 0 0 0-1 1v4.586a1 1 0 0 0 .293.707l7 7a1 1 0 0 0 1.414 0l4.586-4.586a1 1 0 0 0 0-1.414l-7-7A1 1 0 0 0 6.586 1zm4 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0" />
                            </svg>
                            <b>@(oSolicitudLastTicket?.Data?.IdSolicitudTicket)</b>
                        </RadzenText>
                    </div>

                    <div class="col-md-3 text-center">
                        <RadzenText TextStyle="TextStyle.Overline" TextAlign="TextAlign.Justify" class="">MOTIVO / INCIDENCIA:</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class=""><b>@(oSolicitudLastTicket?.Data?.SolIdTipoSolicitudNavigation?.TiposolDescripcion)</b></RadzenText>
                    </div>

                    <div class="col-md-3 text-center">
                        <RadzenText TextStyle="TextStyle.Overline" TextAlign="TextAlign.Justify" class="">OBSERVACIONES / COMENTARIOS:</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class=""><b>@(oSolicitudLastTicket?.Data?.SolObservacionesSolicitud)</b></RadzenText>
                    </div>

                    <div class="col-md-2 text-center">
                        <RadzenText TextStyle="TextStyle.Overline" TextAlign="TextAlign.Center" class="">DATOS:</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class=""><b>@($@"{(oSolicitudLastTicket.Data.SolValidacionDatos ? "Válidos" : "Sin validar")}")</b></RadzenText>
                    </div>

                    <div class="col-md-3 text-center">
                        <RadzenText TextStyle="TextStyle.Overline" TextAlign="TextAlign.Center" class="">FECHA Y HORA DE CREACIÓN:</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class=""><b>@(oSolicitudLastTicket.Data.SolFechaHoraCreacion.ToString("dddd',' dd 'de' MMMM 'del' yyyy 'a las' HH:mm:ss 'hrs.'"))</b></RadzenText>
                    </div>
                </div>

                <!-- ... Contenido para pantallas pequeñas móviles -->
                <div class="d-block d-sm-block d-md-none d-lg-none d-xl-none d-xxl-none">

                    <RadzenText TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Center" Style="font-variant: small-caps;" class="text-danger" Text="@(oSolicitudLastTicket?.Data?.SolIdEstadoSolicitudNavigation?.EdosolNombreEstado)" />

                    <RadzenProgressBarCircular Min="0" Max="100" Value="@valueProgress" Unit="%" ShowValue="true" ProgressBarStyle="@oProgressBarCircularStyle" Mode="ProgressBarMode.Determinate" Size="ProgressBarCircularSize.Large" class="w-100 text-center my-2">
                        <Template><small><b>@valueProgress%</b><br />Progreso</small></Template>
                    </RadzenProgressBarCircular>

                    <RadzenTimeline Orientation="Orientation.Vertical" LinePosition="LinePosition.Start" Reverse="false"
                                    style="--rz-timeline-line-width:10px; --rz-timeline-axis-size:80px; max-width:100%; margin:auto;">
                        <Items>
                            @*////////////////////////////////////////////////////////////////  ESTADO ALTA  //////////////////////////////////////////////////////////////////*@
                            <RadzenTimelineItem PointVariant="Variant.Flat" PointStyle="PointStyle.Info" PointSize="PointSize.Medium" PointShadow="5">
                                <PointContent><RadzenIcon Icon="check" /></PointContent>
                                <ChildContent>
                                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="5px" class="">
                                        <RadzenBadge BadgeStyle="BadgeStyle.Secondary" IsPill="true" Shade="Shade.Default" Variant="Variant.Filled" class="w-100">
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0.25rem">
                                                <RadzenIcon Icon="assignment_turned_in" IconColor="@Colors.White" IconStyle="IconStyle.Warning" Style="font-size:20px;" /> ALTA
                                            </RadzenStack>
                                        </RadzenBadge>
                                        <RadzenText Text="Paso 1" TextStyle="TextStyle.Subtitle1" class="rz-m-0" />
                                        <RadzenText Text="Se ha levantado y aperturado una Solicitud de Ticket." TextStyle="TextStyle.Body2" TextAlign="TextAlign.Justify" class="rz-m-0" />
                                        <RadzenText TextStyle="TextStyle.Body1" TextAlign="TextAlign.Justify" class="rz-m-0"><b>@(oSolicitudLastTicket?.Data?.SolFechaHoraCreacion.ToString("dd/MM/yyyy 'a las' HH:mm:ss 'hrs.'"))</b></RadzenText>
                                    </RadzenStack>
                                </ChildContent>
                            </RadzenTimelineItem>

                            @*////////////////////////////////////////////////////////////////  ESTADO PENDIENTE  //////////////////////////////////////////////////////////////////*@
                            <RadzenTimelineItem PointVariant="@oPointVariantPendiente" PointStyle="PointStyle.Info" PointSize="@oPointSizePendiente" PointShadow="5">
                                <PointContent><RadzenIcon Icon="@iconPointContentPendienteMovil" IconColor="@Colors.White" IconStyle="IconStyle.Danger" /></PointContent>
                                <ChildContent>
                                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="5px" class="">
                                        <RadzenBadge BadgeStyle="BadgeStyle.Warning" IsPill="true" Shade="Shade.Default" Variant="Variant.Filled" class="w-100">
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0.25rem">
                                                <RadzenIcon Icon="hourglass_top" IconColor="@Colors.White" IconStyle="IconStyle.Warning" Style="font-size:20px;" /> PENDIENTE
                                            </RadzenStack>
                                        </RadzenBadge>
                                        <RadzenText Text="Paso 2" TextStyle="TextStyle.Subtitle1" class="rz-m-0" />
                                        <RadzenText Text="Solicitud-Ticket colocada en la Bandeja de Espera para su pronta atención." TextStyle="TextStyle.Body2" TextAlign="TextAlign.Justify" class="rz-m-0" />
                                    </RadzenStack>
                                </ChildContent>
                            </RadzenTimelineItem>

                            @*////////////////////////////////////////////////////////////////  ESTADO EN PROCESO  //////////////////////////////////////////////////////////////////*@
                            <RadzenTimelineItem PointVariant="@oPointVariantEnProceso" PointStyle="PointStyle.Info" PointSize="@oPointSizeEnProceso" PointShadow="10">
                                <PointContent><RadzenIcon Icon="@iconPointContentEnProcesoMovil" /></PointContent>
                                <ChildContent>
                                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="5px" class="">
                                        <RadzenBadge BadgeStyle="BadgeStyle.Info" IsPill="true" Shade="Shade.Light" Variant="Variant.Filled" class="w-100">
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0.25rem">
                                                <RadzenIcon Icon="settings" IconColor="@Colors.White" IconStyle="IconStyle.Warning" Style="font-size:20px;" /> EN PROCESO
                                            </RadzenStack>
                                        </RadzenBadge>
                                        <RadzenText Text="Paso 3" TextStyle="TextStyle.Subtitle1" class="rz-m-0" />
                                        <RadzenText Text="Revisando y validando tus datos. La Solicitud de Ticket se envía a Área Central para la Generación o Recuperación de las Credenciales del Correo Institucional." TextStyle="TextStyle.Body2" TextAlign="TextAlign.Justify" class="rz-m-0" />
                                    </RadzenStack>
                                </ChildContent>
                            </RadzenTimelineItem>

                            @*////////////////////////////////////////////////////////////////  ESTADO ATENDIDO  //////////////////////////////////////////////////////////////////*@
                            <RadzenTimelineItem PointVariant="@oPointVariantAtendido" PointStyle="PointStyle.Info" PointSize="@oPointSizeAtendido" PointShadow="5">
                                <PointContent><RadzenIcon Icon="@iconPointContentAtendidoMovil" /></PointContent>
                                <ChildContent>
                                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="5px" class="">
                                        <RadzenBadge BadgeStyle="BadgeStyle.Success" IsPill="true" Shade="Shade.Light" Variant="Variant.Filled" class="w-100">
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0.25rem">
                                                <RadzenIcon Icon="task_alt" IconColor="@Colors.White" IconStyle="IconStyle.Warning" Style="font-size:20px;" /> ATENDIDA
                                            </RadzenStack>
                                        </RadzenBadge>
                                        <RadzenText Text="Paso 4" TextStyle="TextStyle.Subtitle1" class="rz-m-0" />
                                        <RadzenText Text="Las Credenciales del Correo Institucional generadas con éxito, califica la calidad de atención del servicio." TextStyle="TextStyle.Body2" TextAlign="TextAlign.Justify" class="rz-m-0" />
                                    </RadzenStack>
                                </ChildContent>
                            </RadzenTimelineItem>
                        </Items>
                    </RadzenTimeline>
                </div>

                <!-- ... Contenido para pantallas grandes ... -->
                <div class="d-none d-sm-none d-md-block d-lg-block d-xl-block d-xxl-block">

                    <div class="col-md-10 offset-1">
                        <RadzenText TextStyle="TextStyle.Subtitle1" TextAlign="TextAlign.Center" Style="font-variant: small-caps;" class="text-danger" Text="@(oSolicitudLastTicket?.Data?.SolIdEstadoSolicitudNavigation?.EdosolNombreEstado)" />
                        @* <RadzenSlider TValue="IEnumerable<int>" Min="0" Max="100" Range="true" Value="@(new int[] { 0, 66 })" Step="1" Disabled="false" Visible="true" class="w-100 my-3" /> *@
                        <RadzenProgressBar Min="0" Max="100" Unit="%" @bind-Value="@valueProgress" ShowValue="true" ProgressBarStyle="@oProgressBarCircularStyle" Mode="ProgressBarMode.Determinate" Visible="true" class="mt-2" />
                    </div>

                    <RadzenTimeline Orientation="Orientation.Horizontal" LinePosition="LinePosition.Start" Reverse="false"
                                    style="--rz-timeline-line-width:10px; --rz-timeline-axis-size:80px; max-width:100%; margin:auto;">
                        <Items>
                            @*////////////////////////////////////////////////////////////////  ESTADO ALTA  //////////////////////////////////////////////////////////////////*@
                            <RadzenTimelineItem PointVariant="Variant.Flat" PointStyle="PointStyle.Info" PointSize="PointSize.Medium" PointShadow="5">
                                <PointContent><RadzenIcon Icon="check" /></PointContent>
                                <ChildContent>
                                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="10px" class="">
                                        <RadzenBadge BadgeStyle="BadgeStyle.Secondary" IsPill="true" Shade="Shade.Default" Variant="Variant.Filled" class="w-100">
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0.25rem">
                                                <RadzenIcon Icon="assignment_turned_in" IconColor="@Colors.White" IconStyle="IconStyle.Warning" Style="font-size:20px;" /> ALTA
                                            </RadzenStack>
                                        </RadzenBadge>
                                        <RadzenText Text="Paso 1" TextStyle="TextStyle.Subtitle1" class="rz-m-0" />
                                        <RadzenText Text="Se ha levantado y aperturado una Solicitud de Ticket." TextStyle="TextStyle.Body2" TextAlign="TextAlign.Justify" class="rz-m-0" />
                                        <RadzenText TextStyle="TextStyle.Body1" TextAlign="TextAlign.Justify" class="rz-m-0"><b>@(oSolicitudLastTicket?.Data?.SolFechaHoraCreacion.ToString("dd/MM/yyyy '-' HH:mm:ss 'hrs.'"))</b></RadzenText>
                                    </RadzenStack>
                                </ChildContent>
                            </RadzenTimelineItem>

                            @*////////////////////////////////////////////////////////////////  ESTADO PENDIENTE  //////////////////////////////////////////////////////////////////*@
                            <RadzenTimelineItem PointVariant="@oPointVariantPendiente" PointStyle="PointStyle.Info" PointSize="@oPointSizePendiente" PointShadow="5">
                                <PointContent><RadzenIcon Icon="@iconPointContentPendienteMonitor" IconColor="@Colors.White" IconStyle="IconStyle.Danger" /></PointContent>
                                <ChildContent>
                                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="10px" class="">
                                        <RadzenBadge BadgeStyle="BadgeStyle.Warning" IsPill="true" Shade="Shade.Default" Variant="Variant.Filled" class="w-100">
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0.25rem">
                                                <RadzenIcon Icon="hourglass_top" IconColor="@Colors.White" IconStyle="IconStyle.Warning" Style="font-size:20px;" /> PENDIENTE
                                            </RadzenStack>
                                        </RadzenBadge>
                                        <RadzenText Text="Paso 2" TextStyle="TextStyle.Subtitle1" class="rz-m-0" />
                                        <RadzenText Text="Solicitud-Ticket colocada en la Bandeja de Espera para su pronta atención." TextStyle="TextStyle.Body2" TextAlign="TextAlign.Justify" class="rz-m-0" />
                                    </RadzenStack>
                                </ChildContent>
                            </RadzenTimelineItem>

                            @*////////////////////////////////////////////////////////////////  ESTADO EN PROCESO  //////////////////////////////////////////////////////////////////*@
                            <RadzenTimelineItem PointVariant="@oPointVariantEnProceso" PointStyle="PointStyle.Info" PointSize="@oPointSizeEnProceso" PointShadow="10">
                                <PointContent><RadzenIcon Icon="@iconPointContentEnProcesoMonitor" /></PointContent>
                                <ChildContent>
                                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="10px" class="">
                                        <RadzenBadge BadgeStyle="BadgeStyle.Info" IsPill="true" Shade="Shade.Light" Variant="Variant.Filled" class="w-100">
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0.25rem">
                                                <RadzenIcon Icon="settings" IconColor="@Colors.White" IconStyle="IconStyle.Warning" Style="font-size:20px;" /> EN PROCESO
                                            </RadzenStack>
                                        </RadzenBadge>
                                        <RadzenText Text="Paso 3" TextStyle="TextStyle.Subtitle1" class="rz-m-0" />
                                        <RadzenText Text="Revisando y validando tus datos. La Solicitud de Ticket se envía a Área Central para la Generación o Recuperación de las Credenciales del Correo Institucional." TextStyle="TextStyle.Body2" TextAlign="TextAlign.Justify" class="rz-m-0" />
                                    </RadzenStack>
                                </ChildContent>
                            </RadzenTimelineItem>

                            @*////////////////////////////////////////////////////////////////  ESTADO ATENDIDO  //////////////////////////////////////////////////////////////////*@
                            <RadzenTimelineItem PointVariant="@oPointVariantAtendido" PointStyle="PointStyle.Info" PointSize="@oPointSizeAtendido" PointShadow="5">
                                <PointContent><RadzenIcon Icon="@iconPointContentAtendidoMonitor" /></PointContent>
                                <ChildContent>
                                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="10px" class="">
                                        <RadzenBadge BadgeStyle="BadgeStyle.Success" IsPill="true" Shade="Shade.Light" Variant="Variant.Filled" class="w-100">
                                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0.25rem">
                                                <RadzenIcon Icon="task_alt" IconColor="@Colors.White" IconStyle="IconStyle.Warning" Style="font-size:20px;" /> ATENDIDA
                                            </RadzenStack>
                                        </RadzenBadge>
                                        <RadzenText Text="Paso 4" TextStyle="TextStyle.Subtitle1" class="rz-m-0" />
                                        <RadzenText Text="Las Credenciales del Correo Institucional generadas con éxito, califica la calidad de atención del servicio." TextStyle="TextStyle.Body2" TextAlign="TextAlign.Justify" class="rz-m-0" />
                                    </RadzenStack>
                                </ChildContent>
                            </RadzenTimelineItem>
                        </Items>
                    </RadzenTimeline>
                </div>
            </ChildContent>
        </RadzenFieldset>
    </RadzenPanel>

    <RadzenAlert Title="" AlertStyle="AlertStyle.Secondary" Variant="Variant.Filled" Size="AlertSize.Small" Shade="Shade.Dark" ShowIcon="true" AllowClose="false"
                 Visible="@(existenSolicitudes && oSolicitudLastTicket?.Data?.SolIdEstadoSolicitud == 4)" class="my-3">
        <b>ATENCIÓN:</b> Para visualizar tus <strong>Credenciales del Correo Institucional</strong>, favor de responder la siguiente encuesta.
    </RadzenAlert>

    <RadzenPanel Visible="@(existenSolicitudes && oSolicitudLastTicket?.Data?.SolIdEstadoSolicitud == 4)">
        <RadzenFieldset AllowCollapse="false" ExpandTitle="Encuesta de Satisfacción" CollapseTitle="Encuesta de Satisfacción" ExpandAriaLabel="" CollapseAriaLabel="" class="rz-border-base-500 rz-border-radius-1 rz-shadow-3 py-0">
            <HeaderTemplate>
                <span class="d-inline-flex align-items-center align-middle">
                    <RadzenIcon Icon="hourglass_top" IconColor="@Colors.Secondary" />&ensp;<b style="font-variant: small-caps;">Encuesta de Satisfacción</b>
                </span>
            </HeaderTemplate>
            <ChildContent>
                <div class="row gap-0">
                    <div class="col-md-6 col-lg-6 align-items-center mb-3">
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.SpaceEvenly" Wrap="FlexWrap.NoWrap" Gap="10px" class="">
                            <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Wrap="FlexWrap.Wrap" Gap="0px" class="">
                                <RadzenText Text="Paso 5" TextAlign="TextAlign.Center" TextStyle="TextStyle.Subtitle1" Visible="true" />
                                <RadzenText Text="@($@"Califica la calidad del servicio atendido:")" TextAlign="TextAlign.Center" TextStyle="TextStyle.Body1" Visible="true" />
                                <RadzenRating Stars="5" @bind-Value="@valorEncuesta" Change="@(args => Console.WriteLine(args))" Placeholder="1-5" Disabled="false" ReadOnly="false" />
                                @* <RadzenRating Value="5" Stars="5" @bind-Value="@valorEncuesta" Change="@(args => Console.WriteLine(args))" Placeholder="1-5" Disabled="false" ReadOnly="false" /> *@
                            </RadzenStack>
                            
                        </RadzenStack>
                    </div>

                    <div class="col-md-2 col-lg-2">
                        <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Wrap="FlexWrap.Wrap" Gap="0px" class="">
                            @{
                                switch (valorEncuesta)
                                {
                                    case 1:
                                        <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-emoji-frown-fill text-danger" viewBox="0 0 16 16">
                                            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16M7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5m-2.715 5.933a.5.5 0 0 1-.183-.683A4.5 4.5 0 0 1 8 9.5a4.5 4.5 0 0 1 3.898 2.25.5.5 0 0 1-.866.5A3.5 3.5 0 0 0 8 10.5a3.5 3.5 0 0 0-3.032 1.75.5.5 0 0 1-.683.183M10 8c-.552 0-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5S10.552 8 10 8" />
                                        </svg>
                                        <small><b>Muy Malo</b></small>
                                        break;
                                    case 2:
                                        <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-emoji-grimace-fill text-danger" viewBox="0 0 16 16">
                                            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M7 6.25C7 5.56 6.552 5 6 5s-1 .56-1 1.25.448 1.25 1 1.25 1-.56 1-1.25m3 1.25c.552 0 1-.56 1-1.25S10.552 5 10 5s-1 .56-1 1.25.448 1.25 1 1.25m1.5 4.5a1.5 1.5 0 0 0 1.48-1.25v-.003a1.5 1.5 0 0 0 0-.497A1.5 1.5 0 0 0 11.5 9h-7a1.5 1.5 0 0 0-1.48 1.25v.003a1.5 1.5 0 0 0 0 .497A1.5 1.5 0 0 0 4.5 12zm-7.969-1.25a1 1 0 0 0 .969.75h.25v-.75zm8.938 0a1 1 0 0 1-.969.75h-.25v-.75zM11.5 9.5a1 1 0 0 1 .969.75H11.25V9.5zm-7.969.75A1 1 0 0 1 4.5 9.5h.25v.75zM5.25 11.5h1v-.75h-1zm2.5 0h-1v-.75h1zm1.5 0h-1v-.75h1zm1.5 0h-1v-.75h1zm-1-2h1v.75h-1zm-1.5 0h1v.75h-1zm-1.5 0h1v.75h-1zm-1.5 0h1v.75h-1z" />
                                        </svg>
                                        <small><b>Malo</b></small>
                                        break;
                                    case 3:
                                        <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-emoji-neutral-fill text-warning" viewBox="0 0 16 16">
                                            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16M7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5m-3 4a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M10 8c-.552 0-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5S10.552 8 10 8" />
                                        </svg>
                                        <small><b>Normal</b></small>
                                        break;
                                    case 4:
                                        <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-emoji-smile-fill text-success" viewBox="0 0 16 16">
                                            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16M7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5M4.285 9.567a.5.5 0 0 1 .683.183A3.5 3.5 0 0 0 8 11.5a3.5 3.5 0 0 0 3.032-1.75.5.5 0 1 1 .866.5A4.5 4.5 0 0 1 8 12.5a4.5 4.5 0 0 1-3.898-2.25.5.5 0 0 1 .183-.683M10 8c-.552 0-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5S10.552 8 10 8" />
                                        </svg>
                                        <small><b>Bien</b></small>
                                        break;
                                    case 5:
                                        <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-emoji-laughing-fill text-success" viewBox="0 0 16 16">
                                            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16M7 6.5c0 .501-.164.396-.415.235C6.42 6.629 6.218 6.5 6 6.5s-.42.13-.585.235C5.164 6.896 5 7 5 6.5 5 5.672 5.448 5 6 5s1 .672 1 1.5m5.331 3a1 1 0 0 1 0 1A5 5 0 0 1 8 13a5 5 0 0 1-4.33-2.5A1 1 0 0 1 4.535 9h6.93a1 1 0 0 1 .866.5m-1.746-2.765C10.42 6.629 10.218 6.5 10 6.5s-.42.13-.585.235C9.164 6.896 9 7 9 6.5c0-.828.448-1.5 1-1.5s1 .672 1 1.5c0 .501-.164.396-.415.235" />
                                        </svg>
                                        <small><b>Excelente</b></small>
                                        break;
                                }
                            }
                        </RadzenStack>
                    </div>

                    <div class="col-md-6 col-lg-6">
                        <RadzenFormField Text="Observaciones" AllowFloatingLabel="false" Variant="Variant.Outlined" class="w-100">
                            <Start><RadzenIcon Icon="message" IconColor="@Colors.Base400" /></Start>
                            <ChildContent>
                                                @* @bind-Value="@oSolicitudTicket.SolObservacionesSolicitud" @oninput="@(e => oSolicitudTicket.SolObservacionesSolicitud = e.Value.ToString())" *@
                                <RadzenTextArea Name="@($@"observaciones")" Placeholder="Escribe un comentario, nota o aclaración por el servicio de la Solicitud-Ticket atendida..."
                                                Cols="30" Rows="2" style="border-bottom: 3px solid red;" MinLength="1" MaxLength="300" class="w-100" aria-label="TextArea" Disabled="false" ReadOnly="false" />
                            </ChildContent>
                            <Helper><RadzenText TextStyle="TextStyle.Caption" /></Helper>
                        </RadzenFormField>
                        <RadzenText TextAlign="TextAlign.Center" TextStyle="TextStyle.Body1" class="rz-m-0">
                            @* <b>@(300 - oSolicitudTicket?.SolObservacionesSolicitud?.Length)</b> caracteres restantes de <b>300</b> permitidos. *@
                        </RadzenText>
                        @* <ValidationMessage For="@(() => oSolicitudTicket.SolObservacionesSolicitud)" /> *@
                    </div>

                    <div class="col-md-12 col-lg-12">
                        <RadzenButton Text="Calificar Encuesta de Calidad"
                                      BusyText="Calificando Encuesta de Calidad..."
                                      ButtonStyle="ButtonStyle.Success"
                                      ButtonType="ButtonType.Submit"
                                      IsBusy="false"
                                      Icon="star"
                                      class="w-100 rz-ripple mt-3 mb-0"
                                      Shade="Shade.Default"
                                      Disabled="false"
                                      Size="ButtonSize.Medium"
                                      Variant="Variant.Filled" />
                    </div>
                </div>
            </ChildContent>
        </RadzenFieldset>
    </RadzenPanel>

    <RadzenCard Variant="Variant.Filled" Visible="@(!existenSolicitudes)" Style="max-width: 500px" class="rz-mx-auto rz-py-12">
        <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Wrap="FlexWrap.NoWrap" Gap="10px" class="">
            <RadzenImage Path="logo_saci.png" Style="width:100px; height:100px;" />
            <RadzenText TextStyle="TextStyle.H3" Style="font-variant: small-caps;">Credenciales</RadzenText>

            <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="0px" class="rz-my-6">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-my-0 rz-mb-1">Correo Electrónico Institucional:</RadzenText>
                <RadzenText TextStyle="TextStyle.DisplayH5" class="rz-my-0"><b>@(oUsuario?.Data?.UsuCorreoInstitucionalCuenta)</b></RadzenText>
            </RadzenStack>

            <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="0px" class="">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-mb-0 rz-mb-1">Contraseña:</RadzenText>
                <RadzenText TextStyle="TextStyle.DisplayH5" class="rz-my-0"><b>@(oUsuario?.Data?.UsuCorreoInstitucionalContraseña)</b></RadzenText>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>
}
else
{
    <LoadingComponent />
}

@code
{
    public int valorEncuesta = 5;
    private Response<RequestDTO_Usuario>? oUsuario = new();
    private Response<RequestDTO_Solicitud>? oSolicitudLastTicket = new();
    private bool existenSolicitudes => oSolicitudLastTicket?.Data is not null;

    @*////////////////////////////////////////////////  ProgressBar / ProgressCircular  ////////////////////////////////////////////////*@
    private double valueProgress = 0;
    System.Timers.Timer? oTimer;
    private ProgressBarStyle oProgressBarCircularStyle = ProgressBarStyle.Info;

    @*////////////////////////////////////////////////  ESTADO PENDIENTE  ////////////////////////////////////////////////*@
    private Variant oPointVariantPendiente;
    private PointSize oPointSizePendiente;
    private string iconPointContentPendienteMovil = string.Empty;
    private string iconPointContentPendienteMonitor = string.Empty;

    @*////////////////////////////////////////////////  ESTADO EN PROCESO  ////////////////////////////////////////////////*@
    private Variant oPointVariantEnProceso;
    private PointSize oPointSizeEnProceso;
    private string iconPointContentEnProcesoMovil = string.Empty;
    private string iconPointContentEnProcesoMonitor = string.Empty;

    @*////////////////////////////////////////////////  ESTADO ATENDIDO  ////////////////////////////////////////////////*@
    private Variant oPointVariantAtendido;
    private PointSize oPointSizeAtendido;
    private string iconPointContentAtendidoMovil = string.Empty;
    private string iconPointContentAtendidoMonitor = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadingPage();
    }

    private async Task LoadingPage()
    {
        var authState = await servicioAuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            int id = Convert.ToInt32(user.Claims.FirstOrDefault(c => c.Type == "ID")?.Value);
            oUsuario = await servicioUsuario.GetDataByIdAsync(id);
            oSolicitudLastTicket = await servicioSolicitud.GetDataByIdUsuarioLastTicket(id);

            if (oSolicitudLastTicket is not null && oSolicitudLastTicket.Data != null)
            {
                if (oTimer != null && oTimer.Enabled)
                    return;

                oTimer = new System.Timers.Timer(50);

                if (oSolicitudLastTicket.Data.SolIdEstadoSolicitud == 2)        // ESTADO PENDIENTE
                {
                    @*/////////////////////////////  PROGRESSBARCIRCULAR  ////////////////////////////////*@
                    oTimer.Elapsed += async (sender, e) =>
                    {
                        if (valueProgress < 33)
                            valueProgress += 3;
                        else
                        {
                            valueProgress = 33;
                            oTimer.Stop();
                        }

                        await InvokeAsync(() => { StateHasChanged(); });
                    };
                    oProgressBarCircularStyle = ProgressBarStyle.Warning;

                    @*/////////////////////////////  PENDIENTE  ////////////////////////////////*@
                    oPointVariantPendiente = Variant.Filled; oPointSizePendiente = PointSize.Large;
                    iconPointContentPendienteMovil = "arrow_forward"; iconPointContentPendienteMonitor = "arrow_downward";

                    @*/////////////////////////////  EN PROCESO  ////////////////////////////////*@
                    oPointVariantEnProceso = Variant.Outlined; oPointSizeEnProceso = PointSize.Medium;
                    iconPointContentEnProcesoMovil = "hourglass_top"; iconPointContentEnProcesoMonitor = "hourglass_top";

                    @*/////////////////////////////  ATENDIDO  ////////////////////////////////*@
                    oPointVariantAtendido = Variant.Outlined; oPointSizeAtendido = PointSize.Medium;
                    iconPointContentAtendidoMovil = "hourglass_top"; iconPointContentAtendidoMonitor = "hourglass_top";
                }
                else if (oSolicitudLastTicket.Data.SolIdEstadoSolicitud == 3)   // ESTADO EN PROCESO
                {
                    @*/////////////////////////////  PROGRESSBARCIRCULAR  ////////////////////////////////*@
                    oTimer.Elapsed += async (sender, e) =>
                    {
                        if (valueProgress < 66)
                            valueProgress += 6;
                        else
                        {
                            valueProgress = 66;
                            oTimer.Stop();
                        }

                        await InvokeAsync(() => { StateHasChanged(); });
                    };
                    oProgressBarCircularStyle = ProgressBarStyle.Info;

                    @*/////////////////////////////  PENDIENTE  ////////////////////////////////*@
                    oPointVariantPendiente = Variant.Flat; oPointSizePendiente = PointSize.Medium;
                    iconPointContentPendienteMovil = "check"; iconPointContentPendienteMonitor = "check";

                    @*/////////////////////////////  EN PROCESO  ////////////////////////////////*@
                    oPointVariantEnProceso = Variant.Filled; oPointSizeEnProceso = PointSize.Large;
                    iconPointContentEnProcesoMovil = "arrow_forward"; iconPointContentEnProcesoMonitor = "arrow_downward";

                    @*/////////////////////////////  ATENDIDO  ////////////////////////////////*@
                    oPointVariantAtendido = Variant.Outlined; oPointSizeAtendido = PointSize.Medium;
                    iconPointContentAtendidoMovil = "hourglass_top"; iconPointContentAtendidoMonitor = "hourglass_top";
                }
                else if (oSolicitudLastTicket.Data.SolIdEstadoSolicitud == 4)   // ESTADO ATENDIDO
                {
                    @*/////////////////////////////  PROGRESSBARCIRCULAR  ////////////////////////////////*@
                    oTimer.Elapsed += async (sender, e) =>
                    {
                        if (valueProgress < 100)
                            valueProgress += 10;
                        else
                        {
                            valueProgress = 100;
                            oTimer.Stop();
                        }

                        await InvokeAsync(() => { StateHasChanged(); });
                    };
                    oProgressBarCircularStyle = ProgressBarStyle.Success;

                    @*/////////////////////////////  PENDIENTE  ////////////////////////////////*@
                    oPointVariantPendiente = Variant.Flat; oPointSizePendiente = PointSize.Medium;
                    iconPointContentPendienteMovil = "check"; iconPointContentPendienteMonitor = "check";

                    @*/////////////////////////////  EN PROCESO  ////////////////////////////////*@
                    oPointVariantEnProceso = Variant.Flat; oPointSizeEnProceso = PointSize.Medium;
                    iconPointContentEnProcesoMovil = "check"; iconPointContentEnProcesoMonitor = "check";

                    @*/////////////////////////////  ATENDIDO  ////////////////////////////////*@
                    oPointVariantAtendido = Variant.Filled; oPointSizeAtendido = PointSize.Large;
                    iconPointContentAtendidoMovil = "arrow_forward"; iconPointContentAtendidoMonitor = "arrow_downward";
                }
                else if (oSolicitudLastTicket.Data.SolIdEstadoSolicitud == 5)   // ESTADO ENCUESTA DE CALIDAD CONTESTADA
                {
                    
                }

                oTimer.Start();
            }
        }
    }

    @*////////////////////////////////////////////////  ENCUESTA DE CALIDAD  ////////////////////////////////////////////////*@
    private Response<RequestDTO_EncuestaCalidad>? oEncuestaCalidad = new();


}
