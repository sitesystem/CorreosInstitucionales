@page "/SolicitudesAtendidas"
@attribute [Authorize(Policy = "[Rol] Administrador")]
<PageTitle>@Title</PageTitle>


<div class="p-4 rounded-1 bg-white shadow">
    <h1>@Title</h1>

    @if (!cargado || generando)
    {
        <div class="row my-4">
            <div class="col text-center">
                <img src="logo_saci.png" class="loading_img" />
                <br />
                Trabajando...
            </div>
        </div>
    }

    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
                    FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true"
                    PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                    Data="@items" TItem="RequestDTO_Solicitud" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or"
                    Visible=@cargado
                    SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedItems>
        <Columns>
            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Property="IdSolicitudTicket" Filterable="true" Title="ID" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />

            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Title="Tipo" Filterable="true" TextAlign="TextAlign.Start">
                <Template Context="item">
                    @item.SolIdTipoSolicitudNavigation!.TiposolDescripcion
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Title="Estado" Filterable="false" TextAlign="TextAlign.Start">
                <Template Context="item">
                    @item.SolIdEstadoSolicitudNavigation!.EdosolNombreEstado
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Title="Solicitante" Filterable="false" TextAlign="TextAlign.Start">
                <Template Context="item">
                    @item.SolIdUsuarioNavigation!.UsuPrimerApellido
                    @item.SolIdUsuarioNavigation!.UsuSegundoApellido
                    @item.SolIdUsuarioNavigation!.UsuNombre
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Title="Encuesta de Calidad" Filterable="false" TextAlign="TextAlign.Start">
                <Template Context="item">
                    @if (item.SolEncuestaCalidadCalificacion is null)
                    {
                        <text>(Pendiente de Contestar)</text>
                    }
                    else
                    {
                        <div class="text-center">
                            <img class="d-inline mb-2" src="img/calidad/@(item.SolEncuestaCalidadCalificacion).png" />
                            <br>
                            @item.SolEncuestaCalidadComentarios
                        </div>    
                    }

                </Template>
            </RadzenDataGridColumn>

        </Columns>
    </RadzenDataGrid>
</div>

@code
{
    private string Title = "Solicitudes Pendientes";
    private bool cargado { get; set; } = false;
    private bool generando = false;

    private List<RequestDTO_Solicitud> items = new List<RequestDTO_Solicitud>();
    private IList<RequestDTO_Solicitud> selectedItems = new List<RequestDTO_Solicitud>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CargarLista();

            cargado = true;
            StateHasChanged();
        }
    }

    private async Task CargarLista(int? selecccionar_id = null)
    {
        Response<List<RequestDTO_Solicitud>>? request = await servicioSolicitud.GetAllDataByProgressAsync(3);

        if (request is not null && request.Data is not null)
        {
            items = request.Data;
        }

        if (selecccionar_id is not null)
        {
            selectedItems = items.Where(i => (i.IdSolicitudTicket == selecccionar_id)).ToList();
        }
    }

}
