@page "/catalogo/enlaces"
@inject DialogService DialogService

@using System.Text.Json

<table class="table table-hover shadow">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>ACCIONES</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in items)
        {
            <tr>
                <td>
                    @item.LinkNombre (<a href="@item.LinkEnlace" target="_blank">Ir a @item.LinkEnlace</a>)
                </td>
                <td>
                    <button type="button" class="btn btn-primary form-control" @onclick="async ()=> await Editar(item)">
                        Editar
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code
{
    //ÉSTE CÓDIGO VA EN LA PÁGINA DONDE SE ENCUENTRA EL LISTADO
    private List<RequestViewModel_Link> items = new List<RequestViewModel_Link>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            items = await WebUtils.ListAll(servicioLink);



            StateHasChanged();
        }
    }

    private async Task Editar(RequestViewModel_Link item)
    {
        string json = JsonSerializer.Serialize(item);
        RequestViewModel_Link? registro = JsonSerializer.Deserialize<RequestViewModel_Link>(json);

        if (registro is not null)
        {
            RequestViewModel_Link? result = await DialogService.OpenAsync<EnlaceEditor>
                (
                    "Actualizar Datos",
                    new Dictionary<string, object>() {
                    {"registro", registro},

                        },
                    new DialogOptions() { ShowClose = false, Width = "75%" }
                );
            //CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true,

            if (result is not null)
            {
                HttpResponseMessage response = await servicioLink.EditDataAsync(registro);
                if (response.IsSuccessStatusCode)
                {
                    items = await WebUtils.ListAll(servicioLink);
                }
            }
        }
    }
}
