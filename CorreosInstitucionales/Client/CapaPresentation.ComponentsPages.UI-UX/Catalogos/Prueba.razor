@page "/catalogos/prueba"
@inject DialogService DialogService

@using CorreosInstitucionales.Shared.CapaServices.BusinessLogic

@if (data is not null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>ACCIONES</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in data)
            {
                <tr>
                    <td>
                        @item.UsuNombre
                        @item.UsuPrimerApellido
                        @item.UsuSegundoApellido
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary" @onclick="async ()=>await Editar(item)">
                            Editar
                        </button>
                    </td>
                    <td>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<pre>
    @debug
</pre>


@code 
{
    private string debug = "";
    private List<RequestDTO_Usuario> data = new List<RequestDTO_Usuario>();
    private bool shouldRender = true;

    private List<RequestViewModel_AreaDepto> cat_UsuIdAreaDepto;
    private List<RequestViewModel_Carrera>? cat_UsuIdCarrera;
    private List<RequestViewModel_Rol>? cat_UsuIdRol;
    private List<RequestViewModel_TipoPersonal>? cat_UsuIdTipoPersonal;



    protected override bool ShouldRender() => shouldRender;

    public async Task<List<T>> GetList<T>(IGenericService<T> service)
    {
        var response = await service.GetAllDataAsync(true);

        if (response is null || response.Data is null)
        {
            return new List<T>();
        }

        return response.Data;
    }

    protected override async Task OnInitializedAsync()
    {
        cat_UsuIdAreaDepto = await WebUtils.ListAll(servicioAreaDepto);
    }



    private async Task Editar(RequestDTO_Usuario usuario)
    {
        var result = await DialogService.OpenAsync<UsuarioEditor>(
            usuario.UsuNombre,
            new Dictionary<string, object>() { { "usuario", usuario } },
            new DialogOptions() { CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true, Width = "50%" }
        );

        debug += Environment.NewLine + $"{result}";

        //StateHasChanged();
    }

    

}