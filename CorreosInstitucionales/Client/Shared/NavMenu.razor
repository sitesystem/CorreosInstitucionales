<AuthorizeView Policy="[Rol] Usuario Solicitante">
    <Authorized>
        @*************************** Dashboard (Panel de Control) ***************************@
        <RadzenPanelMenuItem Text="Inicio" Icon="home" IconColor="@Colors.White" Path="Inicio" Style="font-size:16px;" class="nav-menu-hover" />
        <RadzenPanelMenuItem Text="Módulos" style="font-variant: small-caps; font-size:16px;" class="nav-menu-hover" />
        @*************************** Módulo de Solicitudes (Tickets) ***************************@
        <RadzenPanelMenuItem Text="@($@"Solicitudes de Tickets")" Icon="bookmarks" IconColor="@Colors.PrimaryLight" Style="font-size:16px;" Expanded="@isExpanded" class="nav-menu-hover">
            @*************************** Levantamiento del Nuevo Ticket ***************************@
            <RadzenPanelMenuItem Text="Nueva Solicitud de Ticket" Icon="local_offer" IconColor="@Colors.Warning" Path="NuevaSolicitudTicket" class="nav-menu-hover rz-border-base-800" />
            @*************************** Solicitudes (Ticket's) Pendientes y Atendidas ***************************@
            <RadzenPanelMenuItem Text="@($@"Historial de Solicitudes")" Icon="hourglass_bottom" IconColor="@Colors.SuccessLight" Path="HistorialSolicitudesTickets" class="nav-menu-hover rz-border-base-800">
                <Template>
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="5px" class="" Visible="@(isDisplayed)">
                        Historial de Solicitudes&ensp;
                        @{
                            if (!string.IsNullOrEmpty(oSolicitudesByIdUsuario?.Message))
                            {
                                <RadzenBadge Variant="Variant.Flat" Text="@($"{oSolicitudesByIdUsuario?.Message} Tickets")" BadgeStyle="@(BadgeStyle.Info)" Shade="@(Shade.Default)" IsPill="true" class="" />
                            }
                            else
                            {
                                <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Info" Value="100" Min="0" Max="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.ExtraSmall" />
                            }
                        }
                    </RadzenStack>
                </Template>
            </RadzenPanelMenuItem>
        </RadzenPanelMenuItem>
    </Authorized>
    <Authorizing>
    </Authorizing>
    <NotAuthorized>
    </NotAuthorized>
</AuthorizeView>

<AuthorizeView Policy="[Rol] Administrador">
    <Authorized>
        @*************************** Dashboard (Panel de Control) ***************************@
        <RadzenPanelMenuItem Text="Inicio (Panel de Control)" Icon="home" IconColor="@Colors.White" Path="Inicio" Style="font-size:16px;" class="nav-menu-hover" />
        <RadzenPanelMenuItem Text="Módulos" style="font-variant: small-caps; font-size:16px;" class="nav-menu-hover" />
        @*************************** Módulo de Solicitudes (Tickets) ***************************@
        <RadzenPanelMenuItem Text="Solicitudes de Tickets" Icon="bookmarks" IconColor="@Colors.PrimaryLight" Style="font-size:16px;" Expanded="true" class="nav-menu-hover">
            @*************************** Solicitudes (Ticket's) Pendientes ***************************@
            <RadzenPanelMenuItem Text="Solicitudes Pendientes" Icon="sell" IconColor="@Colors.PrimaryLight" Path="SolicitudesPendientes" Click="@(CargarSolicitudes)" class="nav-menu-hover rz-border-base-800">
                <Template>
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="5px" class="" Visible="@(isDisplayed)">
                        Solicitudes Pendientes&ensp;
                        @{
                            if (!string.IsNullOrEmpty(oSolicitudesTicketsPendientes?.Message))
                            {
                                <RadzenBadge Variant="Variant.Flat" Text="@($"{oSolicitudesTicketsPendientes?.Message}")" BadgeStyle="@(BadgeStyle.Warning)" Shade="@(Shade.Default)" IsPill="true" class="" />
                            }
                            else
                            {
                                <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Warning" Value="100" Min="0" Max="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.ExtraSmall" />
                            }
                        }
                    </RadzenStack>
                </Template>
            </RadzenPanelMenuItem>
            @*************************** Solicitudes (Ticket's) en Proceso ***************************@
            <RadzenPanelMenuItem Text="Solicitudes en Proceso" Icon="hourglass_empty" IconColor="@Colors.Warning" Path="SolicitudesProceso" Click="@(CargarSolicitudes)" class="nav-menu-hover rz-border-base-800">
                <Template>
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="5px" class="" Visible="@(isDisplayed)">
                        Solicitudes en Proceso&ensp;
                        @{
                            if (!string.IsNullOrEmpty(oSolicitudesTicketsEnProceso?.Message))
                            {
                                <RadzenBadge Variant="Variant.Flat" Text="@($"{oSolicitudesTicketsEnProceso?.Message}")" BadgeStyle="@(BadgeStyle.Secondary)" Shade="@(Shade.Default)" IsPill="true" class="" />
                            }
                            else
                            {
                                <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Secondary" Value="100" Min="0" Max="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.ExtraSmall" />
                            }
                        }
                    </RadzenStack>
                </Template>
            </RadzenPanelMenuItem>
            @*************************** Solicitudes (Ticket's) Atendidas ***************************@
            <RadzenPanelMenuItem Text="Solicitudes Atendidas" Icon="bookmark" IconColor="@Colors.SuccessLight" Path="SolicitudesAtendidas" Click="@(CargarSolicitudes)" class="nav-menu-hover rz-border-base-800">
                <Template>
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="5px" class="" Visible="@(isDisplayed)">
                        Solicitudes Atendidas&ensp;
                        @{
                            if (!string.IsNullOrEmpty(oSolicitudesTicketsAtendidos?.Message))
                            {
                                <RadzenBadge Variant="Variant.Flat" Text="@($"{oSolicitudesTicketsAtendidos?.Message}")" BadgeStyle="@(BadgeStyle.Success)" Shade="@(Shade.Default)" IsPill="true" class="" />
                            }
                            else
                            {
                                <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Success" Value="100" Min="0" Max="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.ExtraSmall" />
                            }
                        }
                    </RadzenStack>
                </Template>
            </RadzenPanelMenuItem>
        </RadzenPanelMenuItem>
        @*************************** Módulo de Catálogos ***************************@
        <RadzenPanelMenuItem Text="Catálogos" Icon="settings" IconColor="@Colors.Base400" Style="font-size:16px;" Expanded="@isExpanded" class="nav-menu-hover">
            @*************************** Anuncios ***************************@
            <RadzenPanelMenuItem Text="Anuncios" Icon="bookmarks" IconColor="@Colors.Base400" Path="catalogo/anuncios" class="rz-border-base-800 nav-menu-hover" />
            @*************************** Solicitudes ***************************@
            <RadzenPanelMenuItem Text="Solicitudes" Icon="bookmarks" IconColor="@Colors.Base400" Path="catalogo/solicitudes" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catÁreasDeptos ***************************@
            <RadzenPanelMenuItem Text="Áreas / Departamentos" Icon="lan" IconColor="@Colors.Base400" Path="catalogo/areas_departamentos" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catExtensiones ***************************@
            <RadzenPanelMenuItem Text="Números de Extensión" Icon="phone" IconColor="@Colors.Base400" Path="catalogo/extensiones" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catEdificios ***************************@
            <RadzenPanelMenuItem Text="Edificios" Icon="domain" IconColor="@Colors.Base400" Path="catalogo/edificios" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catPisosNiveles ***************************@
            <RadzenPanelMenuItem Text="Pisos (Niveles)" Icon="stairs" IconColor="@Colors.Base400" Path="catalogo/pisos" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catLinks ***************************@
            <RadzenPanelMenuItem Text="Enlaces Web (Links)" Icon="insert_link" IconColor="@Colors.Base400" Path="catalogo/enlaces" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catCarreras ***************************@
            <RadzenPanelMenuItem Text="Carreras / Licenciaturas" Icon="school" IconColor="@Colors.Base400" Path="catalogo/carreras" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catDatosEscuela ***************************@
            <RadzenPanelMenuItem Text="Datos de la Escuela" Icon="apartment" IconColor="@Colors.Base400" Path="catalogo/escuelas" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catTiposSolicitudTicket ***************************@
            <RadzenPanelMenuItem Text="Tipos de Solicitud" Icon="assignment" IconColor="@Colors.Base400" Path="catalogo/tipos_solicitud" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catTiposPersonal ***************************@
            <RadzenPanelMenuItem Text="Tipos de Personal" Icon="supervisor_account" IconColor="@Colors.Base400" Path="catalogo/tipos_personal" class="rz-border-base-800 nav-menu-hover" />
            @*************************** catEstadosSolicitud ***************************@
            <RadzenPanelMenuItem Text="Estados de Solicitud" Icon="device_hub" IconColor="@Colors.Base400" Path="catalogo/estados_solicitud" class="rz-border-base-800 nav-menu-hover" />
        </RadzenPanelMenuItem>
        @*************************** DEBUG ***************************@
        <RadzenPanelMenuItem Text="DEBUG" Icon="extension" IconColor="@Colors.Success" Style="font-size:16px;">
            <RadzenPanelMenuItem Text="Objecto a UI" Icon="label_outline" Path="debug/catalogos" class="nav-menu-hover rz-border-base-800" />
            <RadzenPanelMenuItem Text="Enviar Mensajes (Correo y WA)" Icon="markunread_mailbox" Path="debug/correos" class="nav-menu-hover rz-border-base-800" />
            <RadzenPanelMenuItem Text="Archivos" Icon="settings" Path="debug/archivos" class="nav-menu-hover rz-border-base-800" />
            <RadzenPanelMenuItem Text="Usuarios" Icon="settings" Path="debug/usuarios" class="nav-menu-hover rz-border-base-800" />
            @*************************** Logs (Archivos de Registro de Eventos) ***************************@
            <RadzenPanelMenuItem Text="Logs" Icon="terminal" IconColor="@Colors.White" Path="LogsReg" class="nav-menu-hover rz-border-base-800" />
        </RadzenPanelMenuItem>

        @*************************** tbUsuarios ***************************@
        <RadzenPanelMenuItem Text="Lista de Usuarios" Icon="people_alt" IconColor="@Colors.SecondaryLight" Style="font-size:16px;" Path="catalogo/usuarios" class="nav-menu-hover" />
        @*************************** Manual del Administrador ***************************@
        <RadzenPanelMenuItem Text="Manual de Uso" Icon="book" IconColor="@Colors.White" Style="font-size:16px;" Path="ManualUso" class="nav-menu-hover" />
    </Authorized>
    <Authorizing>
    </Authorizing>
    <NotAuthorized>
    </NotAuthorized>
</AuthorizeView>

@*************************** Perfil ***************************@
<RadzenPanelMenuItem Text="Perfil" Icon="account_circle" IconColor="@Colors.InfoLight" Style="font-size:16px;" Path="Perfil" class="nav-menu-hover" />
@*************************** Cerrar Sesión (LogOut) ***************************@
<RadzenPanelMenuItem Text="Cerrar Sesión" Icon="logout" IconColor="@Colors.DangerLight" Style="font-size:16px;" Click="@LogOut" class="nav-menu-hover" />

@code
{
    [Parameter] public bool isExpanded { get; set; }
    [Parameter] public bool isDisplayed { get; set; }

    private Response<List<RequestDTO_Solicitud>>? oSolicitudesByIdUsuario = new();
    private Response<List<RequestDTO_Solicitud>>? oSolicitudesTicketsPendientes = new();
    private Response<List<RequestDTO_Solicitud>>? oSolicitudesTicketsEnProceso = new();
    private Response<List<RequestDTO_Solicitud>>? oSolicitudesTicketsAtendidos = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await servicioAuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            int id = Convert.ToInt32(user.Claims.FirstOrDefault(c => c.Type == "ID")?.Value);
            oSolicitudesByIdUsuario = await servicioSolicitud.GetAllDataByIdUsuarioAsync(id);
            await CargarSolicitudes();
        }
    }

    private async Task CargarSolicitudes()
    {
        oSolicitudesTicketsPendientes = await servicioSolicitud.GetAllDataByProgressAsync(new int[] { 2 });
        oSolicitudesTicketsEnProceso = await servicioSolicitud.GetAllDataByProgressAsync(new int[] { 3 });
        oSolicitudesTicketsAtendidos = await servicioSolicitud.GetAllDataByProgressAsync(new int[] { 4, 5, 6 });
    }

    private async Task LogOut()
    {
        await loginService.Logout();
        navigationManager.NavigateTo("/");
    }
}
