@page "/NuevaContraseña"

@inject RSendEmailService servicioSendEmail;
@inject RSendWhatsAppService servicioSendWhatsApp;

@* @attribute [Authorize(Policy = "[Rol] Ambos")] *@

<PageTitle>SACI | Nueva Contraseña</PageTitle>

<style type="text/css">
</style>

<AuthorizeView Context="contexto" Policy="[Rol] Ambos">
    <Authorized>
        @{
            if (contexto.User.Identity?.IsAuthenticated == true)
                navigationManager.NavigateTo("/Inicio");
        }
    </Authorized>
    <NotAuthorized>
        <RadzenRow AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.SpaceBetween" Gap="1rem" class="">
            <RadzenColumn Size="12">
                <RadzenCard Variant="Variant.Filled" Class="mb-3">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.Start" Wrap="FlexWrap.NoWrap" Gap="20px" class="">
                        <svg xmlns="http://www.w3.org/2000/svg" width="45" height="45" fill="currentColor" class="bi bi-shield-lock-fill" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M8 0c-.69 0-1.843.265-2.928.56-1.11.3-2.229.655-2.887.87a1.54 1.54 0 0 0-1.044 1.262c-.596 4.477.787 7.795 2.465 9.99a11.8 11.8 0 0 0 2.517 2.453c.386.273.744.482 1.048.625.28.132.581.24.829.24s.548-.108.829-.24a7 7 0 0 0 1.048-.625 11.8 11.8 0 0 0 2.517-2.453c1.678-2.195 3.061-5.513 2.465-9.99a1.54 1.54 0 0 0-1.044-1.263 63 63 0 0 0-2.887-.87C9.843.266 8.69 0 8 0m0 5a1.5 1.5 0 0 1 .5 2.915l.385 1.99a.5.5 0 0 1-.491.595h-.788a.5.5 0 0 1-.49-.595l.384-1.99A1.5 1.5 0 0 1 8 5" />
                        </svg>
                        <RadzenText TextStyle="TextStyle.H3" class="rz-color-base-800">Ingresar Nueva Contraseña</RadzenText>
                    </RadzenStack>
                </RadzenCard>

                <RadzenCard Variant="Variant.Filled" Class="rz-background-color-base-800 mb-3 rz-border-radius-1 rz-shadow-3">
                    <RadzenRow AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.SpaceBetween" Gap="2rem" class="">
                        <RadzenColumn SizeXS="12" SizeSM="12" SizeMD="6" SizeLG="6" SizeXL="6" SizeXX="6" OffsetMD="3" OffsetLG="3" OffsetXL="3" OffsetXX="3" class="rz-background-color-base-50 rz-border-radius-1 rz-shadow-3 rz-px-3">
                            <RadzenFieldset AllowCollapse="true" ExpandTitle="Cambiar Contraseña" CollapseTitle="Cambiar Contraseña" ExpandAriaLabel="" CollapseAriaLabel="" Class="rz-border-base-500 rz-border-radius-1 rz-shadow-3 my-3">
                                <HeaderTemplate>
                                    <span class="d-inline-flex align-items-center align-middle">
                                        <RadzenIcon Icon="lock_reset" IconColor="@Colors.Secondary" />&ensp;<b style="font-variant: small-caps;">Cambiar Contraseña</b>
                                    </span>
                                </HeaderTemplate>
                                <ChildContent>
                                    <EditForm Model="@oChangePassword" OnValidSubmit="@OnValidHandled_ChangePassword">

                                        <RadzenFormField Text="Nueva Contraseña" AllowFloatingLabel="false" Variant="Variant.Outlined" Class="w-100 mt-3">
                                            <Start><RadzenIcon Icon="vpn_key" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                                            <ChildContent>
                                                <RadzenTextBox Name="contraseña" @bind-Value="@oChangePassword.NewPassword" style="border-bottom: 3px solid red;" MinLength="0" MaxLength="20" aria-label="enter password"
                                                               @oninput="(e => oChangePassword.NewPassword = e.Value.ToString())"
                                                               @onkeyup="@CompararContraseñas"
                                                               Visible="@(!VisibleContraseña)" />
                                                <RadzenPassword Name="contraseña_visible" @bind-Value="@oChangePassword.NewPassword" style="border-bottom: 3px solid red;" MinLength="0" MaxLength="20" aria-label="enter password"
                                                                @oninput="(e => oChangePassword.NewPassword = e.Value.ToString())"
                                                                @onkeyup="@CompararContraseñas"
                                                                Visible="@VisibleContraseña" />
                                            </ChildContent>
                                            <End>
                                                <RadzenButton Icon="@(VisibleContraseña ? "visibility" : "visibility_off")"
                                                              Click="@ToggleContraseña"
                                                              Variant="Variant.Text"
                                                              Size="ButtonSize.Small"
                                                              ButtonStyle="ButtonStyle.Secondary"
                                                              Shade="Shade.Dark" />
                                            </End>
                                            <Helper><RadzenText TextStyle="TextStyle.Caption"></RadzenText></Helper>
                                        </RadzenFormField>
                                        <ValidationMessage For="@(() => oChangePassword.NewPassword)" />
                                                            
                                        <RadzenFormField Text="Confirmar Contraseña" AllowFloatingLabel="false" Variant="Variant.Outlined" class="w-100 mt-3">
                                            <Start><RadzenIcon Icon="lock" IconColor="@Colors.Base400" IconStyle="IconStyle.Secondary" /></Start>
                                            <ChildContent>
                                                <RadzenTextBox Name="confirmar_contraseña" @bind-Value="@UsuConfirmarContrasenia" style="border-bottom: 3px solid red;" MinLength="0" MaxLength="20"
                                                                @oninput="(e => UsuConfirmarContrasenia = e.Value.ToString())"
                                                                @onkeyup="@CompararContraseñas"
                                                                Visible="@(!VisibleConfirmarContraseña)" />
                                                <RadzenPassword Name="confirmar_contraseña_visible" @bind-Value="@UsuConfirmarContrasenia" style="border-bottom: 3px solid red;" MinLength="0" MaxLength="20" aria-label="enter password"
                                                                @oninput="(e => UsuConfirmarContrasenia = e.Value.ToString())"
                                                                @onkeyup="@CompararContraseñas"
                                                                Visible="@VisibleConfirmarContraseña" />
                                            </ChildContent>
                                            <End>
                                                <RadzenButton Icon="@(VisibleConfirmarContraseña ? "visibility" : "visibility_off")"
                                                                Click="ToggleConfirmarContraseña"
                                                                Variant="Variant.Text"
                                                                Size="ButtonSize.Small"
                                                                ButtonStyle="ButtonStyle.Secondary"
                                                                Shade="Shade.Dark" />
                                            </End>
                                            <Helper><RadzenText TextStyle="TextStyle.Caption"></RadzenText></Helper>
                                        </RadzenFormField>

                                        <RadzenAlert Title="Ingresa las contraseñas" Text="Verificar que coincidan." AlertStyle="AlertStyle.Danger" Variant="Variant.Filled"
                                                     Size="AlertSize.Small" Shade="Shade.Darker" ShowIcon="true" AllowClose="false" @bind-Visible="flagErrorPasswords" class="mt-4" />

                                        <RadzenButton Text="Cambiar Contraseña"
                                                      BusyText="Cambiando Contraseña ..."
                                                      ButtonStyle="ButtonStyle.Success"
                                                      ButtonType="ButtonType.Submit"
                                                      IsBusy="@busyLoading"
                                                      Icon="security"
                                                      class="w-100 h-25 mt-3 rz-ripple"
                                                      Shade="Shade.Darker"
                                                      Disabled="@DisablePostButton"
                                                      Size="ButtonSize.Large"
                                                      Variant="Variant.Filled" />
                                    </EditForm>
                                </ChildContent>
                            </RadzenFieldset>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenCard>
            </RadzenColumn>
        </RadzenRow>
    </NotAuthorized>
</AuthorizeView>
    
@code
{
    public Response<RequestDTO_Usuario>? oResponse = new();
    public Response<object>? oRespuesta = new();
    public RequestDTO_ChangePassword oChangePassword = new();
    private Response<RequestViewModel_Escuela>? oEscuela = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await servicioAuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            oChangePassword.IdUsuario = Convert.ToInt32(user.Claims.FirstOrDefault(c => c.Type == "ID")?.Value);
            oResponse = await servicioUsuario.GetDataByIdAsync(oChangePassword.IdUsuario);
            oEscuela = await servicioEscuela.GetDataByIdAsync(1);
        }
    }

    @*///////////////////////////////////////////////  VALIDAR CAMPOS CONTRASEÑA Y CONFIRMAR CONTRASEÑA  ///////////////////////////////////////////////*@
    // Hacer visible las Contraseñas con el ícono eye
    private bool VisibleContraseña = true;
    private bool VisibleConfirmarContraseña = true;
    private async Task ToggleContraseña() => VisibleContraseña = !VisibleContraseña;
    private async Task ToggleConfirmarContraseña() => VisibleConfirmarContraseña = !VisibleConfirmarContraseña;

    // Comparar las Contraseñas
    private string UsuConfirmarContrasenia = string.Empty;
    public bool flagErrorPasswords = true;
    private async Task CompararContraseñas() => flagErrorPasswords = !string.Equals(oChangePassword.NewPassword, UsuConfirmarContrasenia, StringComparison.Ordinal) ? true : false;

    @*///////////////////////////////////////////////  REGISTRAR NUEVA CONTRASEÑA  //////////////////////////////////////////////////////////////////////*@
    private bool busyLoading = false;
    private bool DisablePostButton => flagErrorPasswords;

    private RequestDTO_SendWhatsApp oSendWhatsApp = new();

    public async Task OnValidHandled_ChangePassword()
    {
        try
        {
            busyLoading = true;
            var respuesta = await servicioUsuario.ChangePassword(oResponse!.Data!.IdUsuario, oChangePassword.NewPassword);
            oRespuesta = respuesta.Content.ReadFromJsonAsync<Response<object>>().Result;

            if (respuesta.IsSuccessStatusCode)
            {
                @*//  NOTIFICATION TOAST CAMBIO DE CONTRASEÑA EXITOSO  //*@
                NotificationService.Notify(
                    new NotificationMessage
                    {
                        Severity = NotificationSeverity.Success,
                        Duration = 3000,
                        Summary = "¡Cambios Guardados!",
                        Detail = "Se cambió la contraseña y se le notificará por las vías / medios de comunicación."
                        // SummaryContent = ns => @<RadzenText TextStyle="TextStyle.H6">Custom summary: <br /> @DateTime.Now</RadzenText>,
                        // DetailContent = ns => @<RadzenButton Text="Clear" Click="@(args => ns.Messages.Clear())" />
                    });

                @*//  DIALOG MESSAGE CAMBIO DE CONTRASEÑA EXITOSO  //*@
                DialogModalService.Open($@"<span style='font-variant: small-caps; font-size:18px;'>Mensaje<span>", ds =>
                    @<div>
                        <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Wrap="FlexWrap.Wrap" Gap="5px" Class="">
                            <span class="circle-border">
                                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16" style="color: green; font-weight: bold;">
                                    <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425z" />
                                </svg>
                            </span>
                            <RadzenText TextStyle="TextStyle.Body1" class="text-success"><b>¡Cambio de Nueva Contraseña Exitosa!</b></RadzenText>
                        </RadzenStack>
                        <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.SpaceBetween" Wrap="FlexWrap.NoWrap" Gap="5px" Class="">
                            <RadzenStack Gap="0px">
                                <RadzenText TextStyle="TextStyle.Overline" class="rz-mb-0 rz-p-0">Nombre Completo:</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1"><b>@($@"{oResponse.Data.UsuNombres} {oResponse.Data.UsuPrimerApellido} {oResponse.Data.UsuSegundoApellido}")</b></RadzenText>
                            </RadzenStack>
                            <RadzenAlert Title="Atención:" Text="" AlertStyle="AlertStyle.Info" Variant="Variant.Filled" Size="AlertSize.Small" Shade="Shade.Darker" ShowIcon="true" AllowClose="false" class="my-2">
                                <ul>
                                    <li>Se le notificará por las vías / medios de comunicación con la Nueva Contraseña.</li>
                                    <li>Se cerrará la sesión.</li>
                                </ul>
                            </RadzenAlert>
                            <RadzenButton Text="Cerrar"
                                          BusyText=""
                                          ButtonStyle="ButtonStyle.Warning"
                                          ButtonType="ButtonType.Button"
                                          IsBusy="false"
                                          Icon="cancel"
                                          Class="rz-ripple rz-my-0 w-100 text-white"
                                          Shade="Shade.Darker"
                                          Click="@(() => ds.Close(false))" />
                        </RadzenStack>
                    </div>,
                    new DialogOptions()
                    {
                        CloseDialogOnOverlayClick = false,
                        CloseDialogOnEsc = false,
                        AutoFocusFirstElement = true,
                        Width = "Auto",
                        Height = "Auto",
                        Resizable = true,
                        Draggable = true,
                        ShowTitle = true,
                        ShowClose = true,
                        CssClass = "custom-dialog-class",
                        WrapperCssClass = "custom-dialog-wrapper-class"
                    });

                @*//  ENVÍO DE WHATSAPP PARA AVISO DE CAMBIO DE CONTRASEÑA EXITOSO  //*@
                oSendWhatsApp.Number = oResponse.Data.UsuNoCelularActual.Replace(" ", string.Empty);
                oSendWhatsApp.Message = "*SACI | Sistema de Atención para Correos Institucionales*\n" +
                                        "ℹ *POR FAVOR NO RESPONDER A ESTE MENSAJE*\n\n" +
                                        "Se le hace entrega de sus _Credenciales de Acceso_ a la *Plataforma SACI*:\n\n" +
                                        "  ✉ Usuario:\n               *" + oResponse.Data.UsuCorreoPersonalCuentaActual + "*\n" +
                                        "  🔑 Contraseña:\n               *" + oChangePassword.NewPassword + "*\n\n" +
                                        "> Que tenga un excelente día.\n" +
                                        "> *NUESTRO MAYOR COMPROMISO ES BRINDARLE CON EFICIENCIA Y CALIDAD EL SERVICIO.*";

                await servicioSendWhatsApp.SendWhatsAppAsync(oSendWhatsApp);

                @*//  ENVÍO DE CORREO ELECTRÓNICO PARA AVISO DE CAMBIO DE CONTRASEÑA EXITOSO  //*@
                servicioSendEmail.SendEmailAsync(
                    new RequestDTO_SendEmail()
                    {
                        EmailTo = oResponse.Data.UsuCorreoPersonalCuentaActual,
                        Subject = "SACI | CAMBIO DE CONTRASEÑA",
                        Body = $@"
                        <body>
                            <header>
		                        <div align='center'>
			                        <p style='font-weight:bold; text-align:center; color:black;'>SACI | Sistema de Atención para Correos Institucionales</p>
		                        </div>
	                        </header>

                            <p style='text-align:justify; color:black;'>
                                ℹ️ <b>POR FAVOR NO RESPONDER A ESTE CORREO.</b><br><br>
                                Estimad@: <br><b>{oResponse.Data.UsuNombres} {oResponse.Data.UsuPrimerApellido} {oResponse.Data.UsuSegundoApellido}</b><br><br>
                                Se le informa que generó de manera correcta la contraseña de la <b>Plataforma SACI (Sistema de Ayuda para Correos Institucionales)</b>
                                de la Unidad Académica <b>{oEscuela?.Data?.EscNombreCorto} ({oEscuela?.Data?.EscNombreLargo})</b>.
                            </p>

                            <div align='center'>
                                <article style='background-color: rgb(244,244,244); width:700px; border-radius:10px; padding:5px; text-align:justify;'>
				                    <div align='center'>
						                <table style='padding:5px; border: 1px solid black; border-collapse:collapse;' >
							                <thead>
								                <tr style='background-color: #dddddd;'>
									                <th scope='col' colspan='2' style='border: 1px solid black;'>Credenciales de Acceso</th>
								                </tr>
							                </thead>
							                <tbody>
								                <tr style='background-color: #ffffff;'>
									                <td width='250px' style='border: 1px solid black;'>✉️ Usuario:</td>
									                <td width='250px' style='border: 1px solid black;'><b>{oResponse.Data.UsuCorreoPersonalCuentaActual!}</b></td>
								                </tr>
								                <tr style='background-color: #dddddd;'>
									                <td width='250px' style='border: 1px solid black;'>🔑 Contraseña:</td>
									                <td width='250px' style='border: 1px solid black;'><b>{oChangePassword.NewPassword}</b></td>
								                </tr>
							                </tbody>
						                </table>
				                    </div>
			                    </article>
                            </div>

                            <p style='text-align:justify; color:black;'>
                                Que tenga un excelente día.<br>
                                NUESTRO MAYOR COMPROMISO ES BRINDARLE CON EFICIENCIA Y CALIDAD EL SERVICIO.
                            </p>

                            <footer>
		                        <div align='center'>
			                        
		                        </div>
	                        </footer>
                        </body>"
                    });

                await loginService.Logout();
                navigationManager.NavigateTo("/");
            }
            else
            {
                await servicioSendEmail.SendEmailAsync(
                    new RequestDTO_SendEmail()
                    {
                        EmailTo = oResponse.Data.UsuCorreoPersonalCuentaActual,
                        Subject = "SACI | ERROR DE CAMBIO DE CONTRASEÑA",
                        Body = $@"
                        <body>
                            <p style='font-weight:bold; text-align:center;>
                                Estimad@: {oResponse.Data.UsuNombres} {oResponse.Data.UsuPrimerApellido} {oResponse.Data.UsuSegundoApellido}<br><br>
                                Cambio de contraseña NO exitoso en el <b>Sistema para Atención de Correos Institucionales IPN (SACI)</b><br>
                                Por favor no responder a este correo, acuda a la unidad de informática de tu escuela <b>Sistema para Atención de Correos Institucionales IPN (SACI)</b><br>
                            </p>
                            <footer>
                                <p class='text-start' style=''>
                                    Que tenga un excelente día.<br>NUESTRO MAYOR COMPROMISO ES BRINDARLE CON EFICIENCIA Y CALIDAD EL SERVICIO.</p>
                            </footer>
                        </body>"
                    });
            }
        }
        catch (HttpRequestException e)
        {
            await JSRuntime.InvokeAsync<object>("alert", e.Message);
        }
        finally
        {
            busyLoading = false;
        }
    }
}
