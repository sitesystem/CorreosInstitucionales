@page "/SolicitudesAtendidas"

@attribute [Authorize(Policy = "[Rol] Administrador")]

<PageTitle>@Title</PageTitle>

<div class="p-4 rounded-1 bg-white shadow">
    <div class="row mb-4">
        <div class="col-6">
            <h1>@Title</h1>
            <hr />

            <button class="btn btn-secondary" @onclick="CargarLista">
                Recargar Listado
            </button>
        </div>
    </div>

    @if (!cargado || generando)
    {
        <div class="col text-center">
            <img src="img/mail.png" class="loading_img" />
            <br />
            <strong>Trabajando...</strong>
        </div>
    }

    <RadzenDataGrid AllowFiltering="false" AllowColumnResize="true" AllowAlternatingRows="false"
                    FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true"
                    PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                    Data="@items" TItem="RequestDTO_Solicitud" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or"
                    Visible=@cargado>
        <Columns>
            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Property="IdSolicitudTicket" Filterable="true" Title="ID" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />

            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Title="Solicitante" Filterable="false" TextAlign="TextAlign.Start">
                <Template Context="item">
                    <strong>
                        @item.SolIdUsuarioNavigation!.UsuPrimerApellido
                        @item.SolIdUsuarioNavigation!.UsuSegundoApellido
                        @item.SolIdUsuarioNavigation!.UsuNombre
                    </strong>
                    <br />
                    <ul>
                        <li>
                            <strong>CURP:</strong>
                            @item.SolIdUsuarioNavigation.UsuCurp
                        </li>
                        <li>
                            @if (alumno_o_egresado.Contains(item.SolIdUsuarioNavigation.UsuIdTipoPersonal))
                            {
                                <strong>Número de Boleta:</strong>
                                @item.SolIdUsuarioNavigation!.UsuBoletaAlumno
                            }
                            else
                            {
                                <strong>Número de Empleado:</strong>
                                @item.SolIdUsuarioNavigation!.UsuNumeroEmpleado
                            }
                            @if (item.SolIdUsuarioNavigation!.UsuBoletaMaestria != "B000000")
                            {
                                <strong>Número de Boleta de Maestría</strong>
                                @item.SolIdUsuarioNavigation!.UsuBoletaMaestria
                            }
                        </li>

                        <li>
                            <strong>Correo Personal</strong>

                            <div style="white-space: pre-wrap">@item.SolIdUsuarioNavigation!.UsuCorreoPersonalCuentaNueva</div>

                        </li>

                        <li style="white-space: pre-wrap">
                            <strong>Correo Institucional</strong>

                            <div style="white-space: pre-wrap">@item.SolIdUsuarioNavigation!.UsuCorreoInstitucionalCuenta</div>

                        </li>

                        <li>
                            <strong>Número de Celular</strong>
                            <br />
                            @item.SolIdUsuarioNavigation!.UsuNoCelularNuevo
                        </li>
                    </ul>
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Title="Solicitud" Filterable="true" TextAlign="TextAlign.Start">
                <Template Context="item">
                    <strong>
                        @item.SolIdTipoSolicitudNavigation!.TiposolDescripcion
                    </strong>
                    <br />
                    <p style="white-space: pre-wrap">@item.SolObservacionesSolicitud</p>
                    
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Title="Estado" Filterable="false" TextAlign="TextAlign.Start">
                <Template Context="item">
                    <strong>
                        @item.SolIdEstadoSolicitudNavigation!.EdosolNombreEstado
                    </strong>
                    
                    <p style="white-space: pre-wrap">@item.SolRespuestaDcyC</p>
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Title="Encuesta de Calidad" Filterable="false" TextAlign="TextAlign.Center">
                <Template Context="item">
                    @if (item.SolEncuestaCalidadCalificacion is null)
                    {
                        <text>(Sin contestar)</text>
                    }
                    else
                    {
                        <img class="d-inline mb-2" src="img/calidad/@(item.SolEncuestaCalidadCalificacion).png" />
                        <div style="white-space: pre-wrap" class="my-2">@item.SolEncuestaCalidadComentarios</div>
                    }

                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="RequestDTO_Solicitud" Title="Seleccionar" Filterable="false" TextAlign="TextAlign.Center" Frozen="true" Width="120px">
                <Template Context="item">
                    <RadzenSwitch @bind-Value=@item.SolValidacionDatos Change="StateHasChanged" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Switch value" }})" />
                </Template>
            </RadzenDataGridColumn>

        </Columns>
    </RadzenDataGrid>
</div>

<pre>@debug</pre>

@code
{
    private string Title = "Solicitudes Atendidas";
    private bool cargado { get; set; } = false;
    private bool generando = false;

    private List<RequestDTO_Solicitud> items = new List<RequestDTO_Solicitud>();
    private IList<RequestDTO_Solicitud> selectedItems = new List<RequestDTO_Solicitud>();

    private readonly int[] estados = 
    {
        (int)TipoEstadoSolicitud.ATENDIDA, 
        (int)TipoEstadoSolicitud.ENCUESTA_CALIDAD, 
        (int)TipoEstadoSolicitud.CANCELADA 
    };
    private readonly int[] alumno_o_egresado =
    {
        (int)TipoPersonal.ALUMNO,
        (int)TipoPersonal.EGRESADO,
        (int)TipoPersonal.MAESTRIA,
    };

    private string debug = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CargarLista();
        }
    }

    private async Task CargarLista()
    {
        cargado = false;
        StateHasChanged();

        Response<List<RequestDTO_Solicitud>>? request = await servicioSolicitud.GetAllDataByProgressAsync(estados);

        if (request is not null && request.Data is not null)
        {
            if (request.Success == 1)
            {
                items = request.Data;
            }
            else
            {
                debug += $"{Environment.NewLine}<span class=\"text-danger fw-bold\">[ERROR]<span> {request.Message}";
            }
        }

        cargado = true;
        StateHasChanged();
    }
}
